<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [STM32H743I_EVAL\Exe\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image STM32H743I_EVAL\Exe\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Tue Sep 04 18:40:47 2018
<BR><P>
<H3>Maximum Stack Usage =        488 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
GUI_MEMDEV_Paint1Static &rArr; _CreateStaticDevice &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[130]">[Anonymous Symbol]</a>
 <LI><a href="#[293]">[Anonymous Symbol]</a>
 <LI><a href="#[295]">[Anonymous Symbol]</a>
 <LI><a href="#[2a9]">[Anonymous Symbol]</a>
 <LI><a href="#[2ab]">[Anonymous Symbol]</a>
 <LI><a href="#[2b2]">[Anonymous Symbol]</a>
 <LI><a href="#[2d9]">[Anonymous Symbol]</a>
 <LI><a href="#[2e8]">[Anonymous Symbol]</a>
 <LI><a href="#[2e3]">[Anonymous Symbol]</a>
 <LI><a href="#[31c]">[Anonymous Symbol]</a>
 <LI><a href="#[30d]">[Anonymous Symbol]</a>
 <LI><a href="#[359]">[Anonymous Symbol]</a>
 <LI><a href="#[3a4]">[Anonymous Symbol]</a>
 <LI><a href="#[3d1]">[Anonymous Symbol]</a>
 <LI><a href="#[3da]">[Anonymous Symbol]</a>
 <LI><a href="#[3f7]">[Anonymous Symbol]</a>
 <LI><a href="#[3fb]">[Anonymous Symbol]</a>
 <LI><a href="#[400]">[Anonymous Symbol]</a>
 <LI><a href="#[402]">[Anonymous Symbol]</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[10]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">SVC_Handler</a><BR>
 <LI><a href="#[8b]">ADC3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8b]">ADC3_IRQHandler</a><BR>
 <LI><a href="#[2ce]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2ce]">_Findy1</a><BR>
 <LI><a href="#[2d2]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d2]">_Findx1</a><BR>
 <LI><a href="#[2d1]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d1]">_Findx0</a><BR>
 <LI><a href="#[2af]">WM__InvalidateRect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2af]">WM__InvalidateRect</a><BR>
 <LI><a href="#[2cd]">WM_InvalidateWindowAndDescsEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2cd]">WM_InvalidateWindowAndDescsEx</a><BR>
 <LI><a href="#[2c9]">WM__InvalidateDrawAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c9]">WM__InvalidateDrawAndDescs</a><BR>
 <LI><a href="#[2f7]">WM_SendToParent</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d4]">WM__SendMessage</a><BR>
 <LI><a href="#[33c]">WM__UpdateChildPositions</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[33b]">WM_ResizeWindow</a><BR>
 <LI><a href="#[3be]">_MoveDescendents</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3be]">_MoveDescendents</a><BR>
 <LI><a href="#[134]">_Alloc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[136]">_InitOnce</a><BR>
 <LI><a href="#[e]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">BusFault_Handler</a><BR>
 <LI><a href="#[c]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">HardFault_Handler</a><BR>
 <LI><a href="#[d]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">MemManage_Handler</a><BR>
 <LI><a href="#[f]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">UsageFault_Handler</a><BR>
 <LI><a href="#[2eb]">_PaintTransChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2eb]">_PaintTransChildren</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[8b]">ADC3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[26]">ADC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8d]">BDMA_Channel0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8e]">BDMA_Channel1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8f]">BDMA_Channel2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[90]">BDMA_Channel3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[91]">BDMA_Channel4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[92]">BDMA_Channel5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[93]">BDMA_Channel6_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[94]">BDMA_Channel7_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[e]">BusFault_Handler</a> from stm32h7xx_it.o(i.BusFault_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6c]">CEC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[95]">COMP1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[9b]">CRS_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[103]">CUSTOM_CopyBuffer</a> from lcdconf_stm32h743i_eval.o(i.CUSTOM_CopyBuffer) referenced from lcdconf_stm32h743i_eval.o(i.LCD_X_Config)
 <LI><a href="#[104]">CUSTOM_CopyRect</a> from lcdconf_stm32h743i_eval.o(i.CUSTOM_CopyRect) referenced from lcdconf_stm32h743i_eval.o(i.LCD_X_Config)
 <LI><a href="#[105]">CUSTOM_DrawBitmap32bpp</a> from lcdconf_stm32h743i_eval.o(i.CUSTOM_DrawBitmap32bpp) referenced from lcdconf_stm32h743i_eval.o(i.LCD_X_Config)
 <LI><a href="#[101]">CUSTOM_FillRect</a> from lcdconf_stm32h743i_eval.o(i.CUSTOM_FillRect) referenced from lcdconf_stm32h743i_eval.o(i.CUSTOM_FillRect)
 <LI><a href="#[101]">CUSTOM_FillRect</a> from lcdconf_stm32h743i_eval.o(i.CUSTOM_FillRect) referenced from lcdconf_stm32h743i_eval.o(i.LCD_X_Config)
 <LI><a href="#[5d]">DCMI_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7c]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7d]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7e]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7f]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1f]">DMA1_Stream0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[20]">DMA1_Stream1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[21]">DMA1_Stream2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[22]">DMA1_Stream3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[23]">DMA1_Stream4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[24]">DMA1_Stream5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[25]">DMA1_Stream6_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[42]">DMA1_Stream7_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[68]">DMA2D_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4b]">DMA2_Stream0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4c]">DMA2_Stream1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4d]">DMA2_Stream2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[53]">DMA2_Stream5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[54]">DMA2_Stream6_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[55]">DMA2_Stream7_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[74]">DMAMUX1_OVR_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8c]">DMAMUX2_OVR_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[11]">DebugMon_Handler</a> from stm32h7xx_it.o(i.DebugMon_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[50]">ETH_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[51]">ETH_WKUP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1a]">EXTI0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3c]">EXTI15_10_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1b]">EXTI1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1c]">EXTI2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1d]">EXTI3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1e]">EXTI4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2b]">EXTI9_5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[27]">FDCAN1_IT0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[29]">FDCAN1_IT1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[28]">FDCAN2_IT0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2a]">FDCAN2_IT1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[52]">FDCAN_CAL_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[18]">FLASH_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[43]">FMC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5f]">FPU_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[11e]">GUIMONO_DispChar</a> from GUI_CharM.o(.text) referenced 2 times from F6x8.o(.rodata)
 <LI><a href="#[11f]">GUIMONO_GetCharDistX</a> from GUI_CharM.o(.text) referenced 2 times from F6x8.o(.rodata)
 <LI><a href="#[120]">GUIMONO_GetFontInfo</a> from GUI_CharM.o(.text) referenced 2 times from F6x8.o(.rodata)
 <LI><a href="#[121]">GUIMONO_IsInFont</a> from GUI_CharM.o(.text) referenced 2 times from F6x8.o(.rodata)
 <LI><a href="#[106]">GUIPROP_DispChar</a> from GUI_CharP.o(.text) referenced 2 times from F32_1.o(.rodata)
 <LI><a href="#[107]">GUIPROP_GetCharDistX</a> from GUI_CharP.o(.text) referenced 2 times from F32_1.o(.rodata)
 <LI><a href="#[108]">GUIPROP_GetFontInfo</a> from GUI_CharP.o(.text) referenced 2 times from F32_1.o(.rodata)
 <LI><a href="#[109]">GUIPROP_IsInFont</a> from GUI_CharP.o(.text) referenced 2 times from F32_1.o(.rodata)
 <LI><a href="#[ca]">GUI_MEMDEV_Paint1Static</a> from GUIDEV_StaticDevices.o(.text) referenced from WM.o(.text)
 <LI><a href="#[ea]">GUI_MEMDEV__WriteToActiveAlpha</a> from GUIDEV_WriteToActiveAlpha.o(.text) referenced from GUIDEV_32.o(.text)
 <LI><a href="#[bc]">GUI_MEMDEV__WriteToActiveOpaque</a> from GUIDEV_WriteToActiveOpaque.o(.text) referenced from GUIDEV_16.o(.text)
 <LI><a href="#[d8]">GUI_SetAlpha</a> from GUI_SetAlpha.o(.text) referenced from GUI_SetAlpha.o(.text)
 <LI><a href="#[d3]">GUI_TIMER_Exec</a> from GUI_Timer.o(.text) referenced from GUI_Timer.o(.text)
 <LI><a href="#[f8]">GUI_USAGE_BM_AddHLine</a> from GUIDEV_UsageBM.o(.text) referenced from GUIDEV_UsageBM.o(.text)
 <LI><a href="#[f7]">GUI_USAGE_BM_AddPixel</a> from GUIDEV_UsageBM.o(.text) referenced from GUIDEV_UsageBM.o(.text)
 <LI><a href="#[f9]">GUI_USAGE_BM_Clear</a> from GUIDEV_UsageBM.o(.text) referenced from GUIDEV_UsageBM.o(.text)
 <LI><a href="#[fb]">GUI_USAGE_BM_GetNextDirty</a> from GUIDEV_UsageBM.o(.text) referenced from GUIDEV_UsageBM.o(.text)
 <LI><a href="#[6]">GUI_X_ExecIdle</a> from gui_x.o(i.GUI_X_ExecIdle) referenced 2 times from GUI_WaitEvent.o(.data)
 <LI><a href="#[7]">GUI__MixColors</a> from GUI__Alpha.o(.text) referenced 2 times from GUI__Alpha.o(.data)
 <LI><a href="#[8]">GUI__MixColorsBulk</a> from GUI__Alpha.o(.text) referenced 2 times from GUI__Alpha.o(.data)
 <LI><a href="#[7b]">HRTIM1_FLT_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[75]">HRTIM1_Master_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[76]">HRTIM1_TIMA_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[77]">HRTIM1_TIMB_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[78]">HRTIM1_TIMC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[79]">HRTIM1_TIMD_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7a]">HRTIM1_TIME_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8a]">HSEM1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[c]">HardFault_Handler</a> from stm32h7xx_it.o(i.HardFault_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[34]">I2C1_ER_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[33]">I2C1_EV_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[36]">I2C2_ER_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[35]">I2C2_EV_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[58]">I2C3_ER_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[57]">I2C3_EV_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6e]">I2C4_ER_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6d]">I2C4_EV_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[87]">JPEG_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[9]">LCD_AA_MixColors16</a> from LCD_AA.o(.text) referenced 2 times from LCD_AA.o(.data)
 <LI><a href="#[9]">LCD_AA_MixColors16</a> from LCD_AA.o(.text) referenced from LCD_AA.o(.text)
 <LI><a href="#[a4]">LCD_DrawHLine</a> from LCD.o(.text) referenced from GUI_Core.o(.text)
 <LI><a href="#[a5]">LCD_DrawPixel</a> from LCD.o(.text) referenced from GUI_Core.o(.text)
 <LI><a href="#[0]">LCD_GetpPalConvTableBM</a> from LCD_Color.o(.text) referenced 2 times from GUI_Core.o(.data)
 <LI><a href="#[10b]">LCD_Index2Color_M565</a> from GUICC_M565.o(.text) referenced from GUICC_M565.o(.rodata)
 <LI><a href="#[d0]">LCD_Index2Color_M888</a> from GUICC_M888_Index2Color.o(.text) referenced from GUI__Alpha.o(.text)
 <LI><a href="#[cf]">LCD_Index2Color_M8888I</a> from GUICC_M8888I_Index2Color.o(.text) referenced from GUICC_M8888I.o(.rodata)
 <LI><a href="#[cf]">LCD_Index2Color_M8888I</a> from GUICC_M8888I_Index2Color.o(.text) referenced 2 times from GUI__Alpha.o(.text)
 <LI><a href="#[fd]">LCD_SetPixelAA4_NoTrans</a> from LCD_AA.o(.text) referenced from LCD_AA.o(.text)
 <LI><a href="#[fe]">LCD_SetPixelAA4_Trans</a> from LCD_AA.o(.text) referenced from LCD_AA.o(.text)
 <LI><a href="#[ff]">LCD_SetPixelAA8_NoTrans</a> from LCD_AA.o(.text) referenced from LCD_AA.o(.text)
 <LI><a href="#[100]">LCD_SetPixelAA8_Trans</a> from LCD_AA.o(.text) referenced from LCD_AA.o(.text)
 <LI><a href="#[6b]">LPTIM1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[96]">LPTIM2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[97]">LPTIM3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[98]">LPTIM4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[99]">LPTIM5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[9a]">LPUART1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[67]">LTDC_ER_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[66]">LTDC_IRQHandler</a> from stm32h7xx_it.o(i.LTDC_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[86]">MDIOS_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[85]">MDIOS_WKUP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[88]">MDMA_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[d]">MemManage_Handler</a> from stm32h7xx_it.o(i.MemManage_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[b]">NMI_Handler</a> from stm32h7xx_it.o(i.NMI_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[71]">OTG_FS_EP1_IN_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[70]">OTG_FS_EP1_OUT_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[73]">OTG_FS_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[72]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5a]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[59]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5c]">OTG_HS_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5b]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[15]">PVD_AVD_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[12]">PendSV_Handler</a> from stm32h7xx_it.o(i.PendSV_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6a]">QUADSPI_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[19]">RCC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5e]">RNG_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3d]">RTC_Alarm_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[17]">RTC_WKUP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[a]">Reset_Handler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[65]">SAI1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[69]">SAI2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[80]">SAI3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[9c]">SAI4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[44]">SDMMC1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[89]">SDMMC2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6f]">SPDIF_RX_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[37]">SPI1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[38]">SPI2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[46]">SPI3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[62]">SPI4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[63]">SPI5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[64]">SPI6_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[10]">SVC_Handler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[81]">SWPMI1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[13]">SysTick_Handler</a> from stm32h7xx_it.o(i.SysTick_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[9f]">SystemInit</a> from system_stm32h7xx.o(i.SystemInit) referenced from startup_stm32h743xx.o(.text)
 <LI><a href="#[16]">TAMP_STAMP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[82]">TIM15_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[83]">TIM16_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[84]">TIM17_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2c]">TIM1_BRK_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2f]">TIM1_CC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2e]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2d]">TIM1_UP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[30]">TIM2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[31]">TIM3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[32]">TIM4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[45]">TIM5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[49]">TIM6_DAC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4a]">TIM7_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3e]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[41]">TIM8_CC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[40]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3f]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[47]">UART4_IRQHandler</a> from stm32h7xx_it.o(i.UART4_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[48]">UART5_IRQHandler</a> from stm32h7xx_it.o(i.UART5_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[60]">UART7_IRQHandler</a> from stm32h7xx_it.o(i.UART7_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[61]">UART8_IRQHandler</a> from stm32h7xx_it.o(i.UART8_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[102]">UART_DMAAbortOnError</a> from stm32h7xx_hal_uart.o(i.UART_DMAAbortOnError) referenced from stm32h7xx_hal_uart.o(i.HAL_UART_IRQHandler)
 <LI><a href="#[39]">USART1_IRQHandler</a> from stm32h7xx_it.o(i.USART1_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3a]">USART2_IRQHandler</a> from stm32h7xx_it.o(i.USART2_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3b]">USART3_IRQHandler</a> from stm32h7xx_it.o(i.USART3_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[56]">USART6_IRQHandler</a> from stm32h7xx_it.o(i.USART6_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[f]">UsageFault_Handler</a> from stm32h7xx_it.o(i.UsageFault_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[9d]">WAKEUP_PIN_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[cb]">WM__Paint1</a> from WM.o(.text) referenced from WM.o(.text)
 <LI><a href="#[14]">WWDG_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[ba]">_CalcSizeOfChar</a> from GUI_UC_EncodeNone.o(.text) referenced from GUI_UC_EncodeNone.o(.text)
 <LI><a href="#[d9]">_Color2Index</a> from GUI_SetAlpha.o(.text) referenced from GUI_SetAlpha.o(.text)
 <LI><a href="#[10d]">_Color2IndexBulk</a> from GUICC_M565.o(.text) referenced from GUICC_M565.o(.rodata)
 <LI><a href="#[dc]">_Color2IndexBulk</a> from GUI_SetAlpha.o(.text) referenced from GUI_SetAlpha.o(.text)
 <LI><a href="#[127]">_Color2IndexBulk_M8888I</a> from GUICC_M8888I.o(.text) referenced from GUICC_M8888I.o(.rodata)
 <LI><a href="#[122]">_Color2Index_0</a> from GUICC_0.o(.text) referenced from GUICC_0.o(.rodata)
 <LI><a href="#[10a]">_Color2Index_M565</a> from GUICC_M565.o(.text) referenced from GUICC_M565.o(.rodata)
 <LI><a href="#[125]">_Color2Index_M8888I</a> from GUICC_M8888I.o(.text) referenced from GUICC_M8888I.o(.rodata)
 <LI><a href="#[b4]">_CopyBuffer</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[10f]">_DrawBitmap</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.rodata)
 <LI><a href="#[bd]">_DrawBitmap</a> from GUIDEV_16.o(.text) referenced 3 times from GUIDEV_16.o(.text)
 <LI><a href="#[110]">_DrawHLine</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.rodata)
 <LI><a href="#[be]">_DrawHLine</a> from GUIDEV_16.o(.text) referenced 3 times from GUIDEV_16.o(.text)
 <LI><a href="#[111]">_DrawVLine</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.rodata)
 <LI><a href="#[bf]">_DrawVLine</a> from GUIDEV_16.o(.text) referenced 3 times from GUIDEV_16.o(.text)
 <LI><a href="#[bb]">_Encode</a> from GUI_UC_EncodeNone.o(.text) referenced from GUI_UC_EncodeNone.o(.text)
 <LI><a href="#[112]">_FillRect</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.rodata)
 <LI><a href="#[c0]">_FillRect</a> from GUIDEV_16.o(.text) referenced 3 times from GUIDEV_16.o(.text)
 <LI><a href="#[fa]">_GUI_USAGE_BM_Delete</a> from GUIDEV_UsageBM.o(.text) referenced from GUIDEV_UsageBM.o(.text)
 <LI><a href="#[b8]">_GetCharCode</a> from GUI_UC_EncodeNone.o(.text) referenced from GUI_UC_EncodeNone.o(.text)
 <LI><a href="#[b9]">_GetCharSize</a> from GUI_UC_EncodeNone.o(.text) referenced from GUI_UC_EncodeNone.o(.text)
 <LI><a href="#[4]">_GetCharWrap</a> from GUI__Wrap.o(.text) referenced 2 times from GUI__Wrap.o(.data)
 <LI><a href="#[119]">_GetDevData</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.rodata)
 <LI><a href="#[c7]">_GetDevData</a> from GUIDEV_16.o(.text) referenced 3 times from GUIDEV_16.o(.text)
 <LI><a href="#[117]">_GetDevFunc</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.rodata)
 <LI><a href="#[c5]">_GetDevFunc</a> from GUIDEV_16.o(.text) referenced 3 times from GUIDEV_16.o(.text)
 <LI><a href="#[118]">_GetDevProp</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.rodata)
 <LI><a href="#[c6]">_GetDevProp</a> from GUIDEV_16.o(.text) referenced 3 times from GUIDEV_16.o(.text)
 <LI><a href="#[db]">_GetIndexMask</a> from GUI_SetAlpha.o(.text) referenced from GUI_SetAlpha.o(.text)
 <LI><a href="#[124]">_GetIndexMask_0</a> from GUICC_0.o(.text) referenced from GUICC_0.o(.rodata)
 <LI><a href="#[10c]">_GetIndexMask_M565</a> from GUICC_M565.o(.text) referenced from GUICC_M565.o(.rodata)
 <LI><a href="#[126]">_GetIndexMask_M8888I</a> from GUICC_M8888I.o(.text) referenced from GUICC_M8888I.o(.rodata)
 <LI><a href="#[113]">_GetPixelIndex</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.rodata)
 <LI><a href="#[c1]">_GetPixelIndex</a> from GUIDEV_16.o(.text) referenced 3 times from GUIDEV_16.o(.text)
 <LI><a href="#[ab]">_GetPos</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[11a]">_GetRect</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.rodata)
 <LI><a href="#[c8]">_GetRect</a> from GUIDEV_16.o(.text) referenced 3 times from GUIDEV_16.o(.text)
 <LI><a href="#[3]">_GetWordWrap</a> from GUI__Wrap.o(.text) referenced 2 times from GUI__Wrap.o(.data)
 <LI><a href="#[da]">_Index2Color</a> from GUI_SetAlpha.o(.text) referenced from GUI_SetAlpha.o(.text)
 <LI><a href="#[10e]">_Index2ColorBulk</a> from GUICC_M565.o(.text) referenced from GUICC_M565.o(.rodata)
 <LI><a href="#[dd]">_Index2ColorBulk</a> from GUI_SetAlpha.o(.text) referenced from GUI_SetAlpha.o(.text)
 <LI><a href="#[128]">_Index2ColorBulk_M8888I</a> from GUICC_M8888I.o(.text) referenced from GUICC_M8888I.o(.rodata)
 <LI><a href="#[123]">_Index2Color_0</a> from GUICC_0.o(.text) referenced from GUICC_0.o(.rodata)
 <LI><a href="#[ae]">_Init</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[5]">_Log2VisBuffered</a> from GUI_CharLine.o(.text) referenced 2 times from GUI_CharLine.o(.data)
 <LI><a href="#[fc]">_MixColorsGamma16</a> from LCD_AA.o(.text) referenced from LCD_AA.o(.text)
 <LI><a href="#[b0]">_Off</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[af]">_On</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[a3]">_OnExit</a> from GUI_Core.o(.text) referenced 8 times from GUI_Core.o(.text)
 <LI><a href="#[b7]">_ReadRect</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[d6]">_ReadRectFromMemdev</a> from GUI_SetAlpha.o(.text) referenced from GUI_SetAlpha.o(.text)
 <LI><a href="#[ac]">_SetAlpha</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[b1]">_SetAlphaMode</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[11c]">_SetBkColor</a> from LCD.o(.text) referenced from LCD.o(.rodata)
 <LI><a href="#[b3]">_SetChroma</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[b2]">_SetChromaMode</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[11b]">_SetColor</a> from LCD.o(.text) referenced from LCD.o(.rodata)
 <LI><a href="#[b6]">_SetDevFunc</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[11d]">_SetDrawMode</a> from LCD.o(.text) referenced from LCD.o(.rodata)
 <LI><a href="#[116]">_SetOrg</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.rodata)
 <LI><a href="#[c4]">_SetOrg</a> from GUIDEV_16.o(.text) referenced 3 times from GUIDEV_16.o(.text)
 <LI><a href="#[114]">_SetPixelIndex</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.rodata)
 <LI><a href="#[c2]">_SetPixelIndex</a> from GUIDEV_16.o(.text) referenced 3 times from GUIDEV_16.o(.text)
 <LI><a href="#[aa]">_SetPos</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[a9]">_SetSize</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[a7]">_SetVRAMAddr</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[a8]">_SetVSize</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[ad]">_SetVis</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[b5]">_ShowBuffer</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.text)
 <LI><a href="#[115]">_XorPixel</a> from GUIDRV_Lin_16.o(.text) referenced from GUIDRV_Lin_16.o(.rodata)
 <LI><a href="#[c3]">_XorPixel</a> from GUIDEV_16.o(.text) referenced 3 times from GUIDEV_16.o(.text)
 <LI><a href="#[a0]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32h743xx.o(.text)
 <LI><a href="#[cd]">_cbBackWin</a> from WM.o(.text) referenced from WM.o(.text)
 <LI><a href="#[a2]">_cbDrawTextLine</a> from GUI_Common.o(.text) referenced from GUI_Common.o(.text)
 <LI><a href="#[a1]">_cbDrawTextStyle</a> from GUI_Common.o(.text) referenced from GUI_Common.o(.text)
 <LI><a href="#[cc]">_cbPaintMemDev</a> from WM.o(.text) referenced from WM.o(.text)
 <LI><a href="#[d5]">_cbTimer</a> from WM_Timer.o(.text) referenced from WM_Timer.o(.text)
 <LI><a href="#[9e]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[2]">memcpy</a> from memmove.o(.text) referenced 2 times from GUI__Private.o(.data)
 <LI><a href="#[1]">memset</a> from memseta.o(.text) referenced 2 times from GUI__Private.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[a0]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(.text)
</UL>
<P><STRONG><a name="[492]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[129]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[42f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[493]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[494]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[495]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[496]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[497]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[a]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>BDMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>BDMA_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>BDMA_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>BDMA_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>BDMA_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>BDMA_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>BDMA_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>BDMA_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>COMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>DMAMUX1_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>DMAMUX2_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>FDCAN2_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>FDCAN2_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>FDCAN_CAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>HRTIM1_FLT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>HRTIM1_Master_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>HRTIM1_TIMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>HRTIM1_TIMB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>HRTIM1_TIMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>HRTIM1_TIMD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>HRTIM1_TIME_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>HSEM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>JPEG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>LPTIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>LPTIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>LPTIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>MDIOS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>MDIOS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>MDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>OTG_FS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>OTG_FS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PVD_AVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>SAI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>SAI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>SDMMC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>SPDIF_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>SWPMI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>WAKEUP_PIN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1b7]"></a>GUI_ALLOC_Exit</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exit
</UL>

<P><STRONG><a name="[498]"></a>GUI_ALLOC_p2h</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[1b9]"></a>GUI_ALLOC_FreeFixedBlock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
</UL>

<P><STRONG><a name="[138]"></a>GUI_ALLOC_GetFixedBlock</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
</UL>

<P><STRONG><a name="[139]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[13b]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateArea
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInvalidRect
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowInfo
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__NotifyVisChanged
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[13a]"></a>GUI_ALLOC_LockH</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetStayOnTop
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetAnchor
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetStayOnTop
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetCallback
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BroadcastMessage
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyVisChanged
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_Select
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateWindowDevice
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MarkDirty
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimer
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetTime
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetDelay
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetPeriod
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteOpaqueAt
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[144]"></a>GUI_ALLOC_UnlockH</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetStayOnTop
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_Select
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MarkDirty
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[13e]"></a>GUI_ALLOC_GetNumFreeBytes</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMemInfo
</UL>

<P><STRONG><a name="[499]"></a>GUI_ALLOC_GetNumFreeBlocks</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[13d]"></a>GUI_ALLOC_GetNumUsedBytes</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMemInfo
</UL>

<P><STRONG><a name="[49a]"></a>GUI_ALLOC_GetMaxUsedBytes</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[13c]"></a>GUI_ALLOC_GetMemInfo</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetNumUsedBytes
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetNumFreeBytes
</UL>

<P><STRONG><a name="[49b]"></a>GUI_ALLOC_SuppressPeak</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[49c]"></a>GUI_ALLOC_GetNumUsedBlocks</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>GUI_ALLOC_GetMaxSize</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
</UL>

<P><STRONG><a name="[140]"></a>GUI_ALLOC_RequestSize</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI_ALLOC_RequestSize &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[49d]"></a>GUI_ALLOC_Lock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[49e]"></a>GUI_ALLOC_Unlock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[447]"></a>GUI_ALLOC_AssignMemory</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[49f]"></a>GUI_ALLOC_SetAvBlockSize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>GUI_ALLOC_GetSize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[135]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_ALLOC_Free &rArr; _AddFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_USAGE_BM_Delete
</UL>

<P><STRONG><a name="[141]"></a>GUI_ALLOC_FreePtr</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[142]"></a>GUI_ALLOC_FreePtrArray</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>

<P><STRONG><a name="[4a0]"></a>GUI_ALLOC_SetMaxPercentage</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[143]"></a>GUI_ALLOC_AllocInit</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>

<P><STRONG><a name="[145]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[146]"></a>GUI_ALLOC_Realloc</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>

<P><STRONG><a name="[149]"></a>GUI__GetFontSizeY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>

<P><STRONG><a name="[14b]"></a>GUI__InvertRectColors</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>

<P><STRONG><a name="[157]"></a>GUI_AddBin</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispBinAt
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispBin
</UL>

<P><STRONG><a name="[4a1]"></a>GUI_Long2Len</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[4a2]"></a>GUI_AddSign</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[4a3]"></a>GUI_AddDecShift</STRONG> (Thumb, 136 bytes, Stack size 20 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[160]"></a>GUI_AddHex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispHexAt
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispHex
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AddSpaceHex
</UL>

<P><STRONG><a name="[155]"></a>GUI_CalcColorDist</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, GUI_Common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_CalcColorDist
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcVisColorError
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[150]"></a>GUI_Color2Index</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>

<P><STRONG><a name="[151]"></a>GUI_Color2VisColor</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ColorIsAvailable
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcVisColorError
</UL>

<P><STRONG><a name="[153]"></a>GUI_ColorIsAvailable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2VisColor
</UL>

<P><STRONG><a name="[154]"></a>GUI_CalcVisColorError</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2VisColor
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcColorDist
</UL>

<P><STRONG><a name="[156]"></a>GUI_DispBin</STRONG> (Thumb, 24 bytes, Stack size 48 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddBin
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[159]"></a>GUI_DispBinAt</STRONG> (Thumb, 20 bytes, Stack size 56 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddBin
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[15c]"></a>GUI_DispCEOL</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAtCEOL
</UL>

<P><STRONG><a name="[15f]"></a>GUI_DispHex</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddHex
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[161]"></a>GUI_DispHexAt</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddHex
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[163]"></a>GUI_GetClientRect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[165]"></a>GUI_GetBkColorIndex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>

<P><STRONG><a name="[167]"></a>GUI_GetBkColor</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, GUI_Common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[168]"></a>GUI_GetColorIndex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>

<P><STRONG><a name="[16a]"></a>GUI_GetColor</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, GUI_Common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_GetColor &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[4a4]"></a>GUI_GetDispPosX</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[4a5]"></a>GUI_GetDispPosY</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[443]"></a>GUI_GetDrawMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_FillRect
</UL>

<P><STRONG><a name="[4a6]"></a>GUI_GetFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[4a7]"></a>GUI_GetFontInfo</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[16b]"></a>GUI_GetFontSizeY</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[4a8]"></a>GUI_GetLineStyle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[16d]"></a>GUI__GetOrg</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
</UL>

<P><STRONG><a name="[16c]"></a>GUI_GetOrg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[4a9]"></a>GUI_GetTextAlign</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[16e]"></a>GUI_GetTextExtend</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetFontSizeY
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
</UL>

<P><STRONG><a name="[4aa]"></a>GUI_GetTextMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[4ab]"></a>GUI_GetVersionString</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[4ac]"></a>GUI_GetYSizeOfFont</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[4ad]"></a>GUI_GetYDistOfFont</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[173]"></a>GUI_Index2Color</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>

<P><STRONG><a name="[174]"></a>GUI_MergeRect</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, GUI_Common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MergeRect &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[2c7]"></a>GUI_MoveRect</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, GUI_Common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
</UL>

<P><STRONG><a name="[176]"></a>GUI_Exec1</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>

<P><STRONG><a name="[178]"></a>GUI_Exec</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitKey
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[17a]"></a>GUI_GetBitmapPixelIndexEx</STRONG> (Thumb, 132 bytes, Stack size 12 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>

<P><STRONG><a name="[179]"></a>GUI_GetBitmapPixelIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelColor
</UL>

<P><STRONG><a name="[17b]"></a>GUI_GetBitmapPixelColor</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>

<P><STRONG><a name="[4ae]"></a>GUI_GotoX</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[4af]"></a>GUI_GotoY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[1a5]"></a>GUI_GotoXY</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[4b0]"></a>GUI_IsInFont</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[4b1]"></a>GUI_GetPenSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[4b2]"></a>GUI_GetPenShape</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[195]"></a>GUI_SetPenSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[4b3]"></a>GUI_SetPenShape</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[4b4]"></a>GUI_MagnifyPolygon</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[17c]"></a>GUI_RotatePolygon</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
</UL>

<P><STRONG><a name="[275]"></a>GUI_RectsIntersect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, GUI_Common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyVisChanged
</UL>

<P><STRONG><a name="[17f]"></a>GUI_SaveContext_W</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Update
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>

<P><STRONG><a name="[181]"></a>GUI_RestoreContext</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Update
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>

<P><STRONG><a name="[4b5]"></a>GUI_SetScreenSizeX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[4b6]"></a>GUI_SetScreenSizeY</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[182]"></a>GUI_GetScreenSizeX</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
</UL>

<P><STRONG><a name="[184]"></a>GUI_GetScreenSizeY</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
</UL>

<P><STRONG><a name="[186]"></a>GUI_SelectLCD</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, GUI_Common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[18a]"></a>GUI_SetClipRect</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>

<P><STRONG><a name="[18c]"></a>GUI_SetBkColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_Common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>

<P><STRONG><a name="[18e]"></a>GUI_SetColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_Common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>

<P><STRONG><a name="[190]"></a>GUI_SetBkColorIndex</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>

<P><STRONG><a name="[192]"></a>GUI_SetColorIndex</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>

<P><STRONG><a name="[4b7]"></a>GUI_SetDecChar</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[4b8]"></a>GUI_GetDecChar</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[194]"></a>GL_SetDefault</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, GUI_Common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GL_SetDefault
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefault
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>

<P><STRONG><a name="[19b]"></a>GUI_SetDefault</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[198]"></a>GUI_SetDrawMode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_Common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[199]"></a>GUI_SetFont</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_Common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[4b9]"></a>GUI_SetLBorder</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[19a]"></a>GUI_SetLineStyle</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[1b4]"></a>GUI_SetOrg</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, GUI_Common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[196]"></a>GUI_SetTextAlign</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_Common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[197]"></a>GUI_SetTextMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_Common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[4ba]"></a>GUI_SetTextStyle</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, GUI_Common.o(.text), UNUSED)

<P><STRONG><a name="[19d]"></a>GUI_WaitKey</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetKey
</UL>

<P><STRONG><a name="[4bb]"></a>GUI_SetFuncGetpPalConvTable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[4bc]"></a>GUI_SetDefaultBkColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[4bd]"></a>GUI_SetDefaultColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[4be]"></a>GUI_SetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[4bf]"></a>GUI_GetDefaultBkColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[4c0]"></a>GUI_GetDefaultColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[4c1]"></a>GUI_GetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[15e]"></a>GUI_ClearRect</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, GUI_Core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCEOL
</UL>

<P><STRONG><a name="[1a3]"></a>GUI_ClearRectEx</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>

<P><STRONG><a name="[1a4]"></a>GUI_Clear</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, GUI_Core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_Clear &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[1a6]"></a>GUI__Config</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, GUI_Core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = GUI__Config &rArr; LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[1aa]"></a>GUI_Init</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, GUI_Core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = GUI_Init &rArr; WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplaySize
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a9]"></a>GUI__RegisterExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfigEx
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RegisterExit
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[4c2]"></a>GUI_IsInitialized</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[1b6]"></a>GUI_Exit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, GUI_Core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Exit
</UL>

<P><STRONG><a name="[4c3]"></a>GUI_SetAfterInitHook</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[4c4]"></a>GUI_DCACHE_SetClearCacheHook</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[1d7]"></a>GUI_DCACHE_Clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
</UL>

<P><STRONG><a name="[4c5]"></a>GUI_SetFuncDrawM565</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[4c6]"></a>GUI_SetpfMemset</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[4c7]"></a>GUI_SetpfMemcpy</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[3f0]"></a>GUI_DEVICE__GetpDevice</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, GUI_Device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[1d6]"></a>GUI_DEVICE__GetpDriver</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, GUI_Device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AssignCursorLayer
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RefreshEx
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_OnEx
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_OffEx
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfIndex2ColorEx
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfColor2IndexEx
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
</UL>

<P><STRONG><a name="[1b8]"></a>GUI_DEVICE_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[1ba]"></a>GUI_DEVICE_Create</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, GUI_Device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[2a6]"></a>GUI_DEVICE_Unlink</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, GUI_Device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[1bc]"></a>GUI_DEVICE_Link</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, GUI_Device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_LinkDevices
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[1bb]"></a>GUI_DEVICE_CreateAndLink</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, GUI_Device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[4c8]"></a>GUI_DEVICE_UnlinkTaskDevices</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_Device.o(.text), UNUSED)

<P><STRONG><a name="[1bd]"></a>GUI_DEVICE_LinkDevices</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, GUI_Device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
</UL>

<P><STRONG><a name="[158]"></a>GUI_DispString</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, GUI_DispString.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispHex
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispBin
</UL>

<P><STRONG><a name="[162]"></a>GUI_DispStringAt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_DispString.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAtCEOL
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[1c1]"></a>GUI_DispStringAtCEOL</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, GUI_DispString.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCEOL
</UL>

<P><STRONG><a name="[1c2]"></a>GUI_DispStringHCenterAt</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, GUI_DispString.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
</UL>

<P><STRONG><a name="[1c3]"></a>GUI_DispStringLen</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, GUI_DispString.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispChar
</UL>

<P><STRONG><a name="[1c6]"></a>GUI__DispStringInRect</STRONG> (Thumb, 320 bytes, Stack size 64 bytes, GUI_DispString.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>

<P><STRONG><a name="[1c7]"></a>GUI_DispStringInRectMax</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, GUI_DispString.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
</UL>

<P><STRONG><a name="[1c9]"></a>GUI_DispStringInRect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_DispString.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>

<P><STRONG><a name="[1ca]"></a>GUI_WrapGetNumLines</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, GUI_DispString.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[1cc]"></a>GUI_DispStringInRectWrap</STRONG> (Thumb, 298 bytes, Stack size 64 bytes, GUI_DispString.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>

<P><STRONG><a name="[1ce]"></a>GUI_GetStringDistX</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, GUI_DispString.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
</UL>

<P><STRONG><a name="[1d2]"></a>GUI_MULTIBUF_BeginEx</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, GUI_MULTIBUF.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndex
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_Begin
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIBUF_BeginMasked
</UL>

<P><STRONG><a name="[1d4]"></a>GUI_MULTIBUF_EndEx</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, GUI_MULTIBUF.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndex
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DCACHE_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_End
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIBUF_EndMasked
</UL>

<P><STRONG><a name="[1d8]"></a>GUI_MULTIBUF_ConfirmEx</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, GUI_MULTIBUF.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MULTIBUF_ConfirmEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_Confirm
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[1d9]"></a>GUI_MULTIBUF_ConfigEx</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, GUI_MULTIBUF.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MULTIBUF_ConfigEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndex
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_Config
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[1da]"></a>GUI_MULTIBUF_GetNumBuffersEx</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, GUI_MULTIBUF.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_GetNumBuffers
</UL>

<P><STRONG><a name="[1db]"></a>GUI_MULTIBUF_Begin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_MULTIBUF.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
</UL>

<P><STRONG><a name="[1dc]"></a>GUI_MULTIBUF_End</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_MULTIBUF.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
</UL>

<P><STRONG><a name="[1dd]"></a>GUI_MULTIBUF_Confirm</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_MULTIBUF.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfirmEx
</UL>

<P><STRONG><a name="[1de]"></a>GUI_MULTIBUF_Config</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_MULTIBUF.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfigEx
</UL>

<P><STRONG><a name="[1df]"></a>GUI_MULTIBUF_GetNumBuffers</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_MULTIBUF.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_GetNumBuffersEx
</UL>

<P><STRONG><a name="[4c9]"></a>GUI_MULTIBUF_UseSingleBuffer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_MULTIBUF.o(.text), UNUSED)

<P><STRONG><a name="[4ca]"></a>GUI_MULTIBUF_SetLayerMask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_MULTIBUF.o(.text), UNUSED)

<P><STRONG><a name="[1e0]"></a>GUI_AssignCursorLayer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, GUI_SelectLayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>

<P><STRONG><a name="[4cb]"></a>GUI_GetCursorLayer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text), UNUSED)

<P><STRONG><a name="[1e1]"></a>GUI_GetLayerPosEx</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, GUI_SelectLayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_GetLayerPosEx &rArr; LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[4cc]"></a>GUI_GetSelLayer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text), UNUSED)

<P><STRONG><a name="[1e3]"></a>GUI_SelectLayer</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, GUI_SelectLayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[1e4]"></a>GUI_SetLayerAlphaEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaEx
</UL>

<P><STRONG><a name="[1e6]"></a>GUI_SetLayerPosEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
</UL>

<P><STRONG><a name="[1e8]"></a>GUI_SetLayerSizeEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
</UL>

<P><STRONG><a name="[1ea]"></a>GUI_SetLayerVisEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_SetLayerVisEx &rArr; LCD_SetVisEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[10b]"></a>LCD_Index2Color_M565</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, GUICC_M565.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_M565.o(.rodata)
</UL>
<P><STRONG><a name="[4cd]"></a>GUICC_M565_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUICC_M565.o(.text), UNUSED)

<P><STRONG><a name="[19c]"></a>LCD_SetDrawMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[a5]"></a>LCD_DrawPixel</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_Core.o(.text)
</UL>
<P><STRONG><a name="[a4]"></a>LCD_DrawHLine</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTextLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_Core.o(.text)
</UL>
<P><STRONG><a name="[20b]"></a>LCD_DrawVLine</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, LCD.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[1a1]"></a>LCD_FillRect</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_FillRect
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[20e]"></a>LCD__DrawBitmap_1bpp</STRONG> (Thumb, 206 bytes, Stack size 64 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LCD__DrawBitmap_1bpp &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[21f]"></a>LCD_DrawBitmap</STRONG> (Thumb, 276 bytes, Stack size 64 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[220]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[1ae]"></a>emWin_LCD_Init</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = emWin_LCD_Init &rArr; LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[14e]"></a>LCD_Color2Index</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__InvertRectColors
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2VisColor
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2Index
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_Trans
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_NoTrans
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_NoTrans
</UL>

<P><STRONG><a name="[14d]"></a>LCD_Index2Color</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__InvertRectColors
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Index2Color
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[193]"></a>LCD_SetColorIndex</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
</UL>

<P><STRONG><a name="[191]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColorIndex
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
</UL>

<P><STRONG><a name="[18d]"></a>LCD_SetBkColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Update
</UL>

<P><STRONG><a name="[18f]"></a>LCD_SetColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Update
</UL>

<P><STRONG><a name="[14f]"></a>LCD_SetPixelIndex</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, LCD.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__InvertRectColors
</UL>

<P><STRONG><a name="[225]"></a>LCD_GetXSizeEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[226]"></a>LCD_GetYSizeEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[227]"></a>LCD_GetVXSizeEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSize
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[228]"></a>LCD_GetVYSizeEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSize
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[229]"></a>LCD_GetBitsPerPixelEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_LayerInit
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
</UL>

<P><STRONG><a name="[22a]"></a>LCD_GetNumColorsEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColorsEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[22b]"></a>LCD_GetXMagEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXMag
</UL>

<P><STRONG><a name="[22c]"></a>LCD_GetYMagEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYMag
</UL>

<P><STRONG><a name="[1f2]"></a>LCD_GetMirrorXEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetMirrorXEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorX
</UL>

<P><STRONG><a name="[1f3]"></a>LCD_GetMirrorYEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetMirrorYEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorY
</UL>

<P><STRONG><a name="[1f4]"></a>LCD_GetSwapXYEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetSwapXYEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXY
</UL>

<P><STRONG><a name="[183]"></a>LCD_GetXSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSize &rArr; LCD_GetXSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetScreenSizeX
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[185]"></a>LCD_GetYSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSize &rArr; LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetScreenSizeY
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[22d]"></a>LCD_GetVXSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
</UL>

<P><STRONG><a name="[22e]"></a>LCD_GetVYSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
</UL>

<P><STRONG><a name="[22f]"></a>LCD_GetBitsPerPixel</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRect
</UL>

<P><STRONG><a name="[230]"></a>LCD_GetNumColors</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColors &rArr; LCD_GetNumColorsEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexMask_0
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[231]"></a>LCD_GetXMag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXMagEx
</UL>

<P><STRONG><a name="[232]"></a>LCD_GetYMag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYMagEx
</UL>

<P><STRONG><a name="[233]"></a>LCD_GetMirrorX</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
</UL>

<P><STRONG><a name="[234]"></a>LCD_GetMirrorY</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
</UL>

<P><STRONG><a name="[235]"></a>LCD_GetSwapXY</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
</UL>

<P><STRONG><a name="[354]"></a>GUI_GetBitsPerPixelEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>

<P><STRONG><a name="[4ce]"></a>LCD_GetDevFunc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)

<P><STRONG><a name="[236]"></a>LCD_GetPaletteEx</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
</UL>

<P><STRONG><a name="[237]"></a>LCD_GetPalette</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPalette &rArr; LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[238]"></a>LCD_GetpfIndex2ColorEx</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>

<P><STRONG><a name="[355]"></a>GUI_GetpfIndex2ColorEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[239]"></a>LCD_GetpfColor2IndexEx</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>

<P><STRONG><a name="[3a5]"></a>GUI_GetpfColor2IndexEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[1b2]"></a>LCD_GetXSizeMax</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetXSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[1b1]"></a>LCD_GetYSizeMax</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetYSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[23a]"></a>LCD_GetVXSizeMax</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetVXSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
</UL>

<P><STRONG><a name="[23b]"></a>LCD_GetVYSizeMax</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>

<P><STRONG><a name="[23c]"></a>LCD_GetBitsPerPixelMax</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>

<P><STRONG><a name="[1b3]"></a>LCD_SetDisplaySize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[1af]"></a>LCD_GetXSizeDisplay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>

<P><STRONG><a name="[1b0]"></a>LCD_GetYSizeDisplay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>

<P><STRONG><a name="[23e]"></a>LCD__GetBPP</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>

<P><STRONG><a name="[23d]"></a>LCD__GetBPPDevice</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPP
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>

<P><STRONG><a name="[1e5]"></a>LCD_SetAlphaEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerAlphaEx
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlpha
</UL>

<P><STRONG><a name="[242]"></a>LCD_SetVRAMAddrEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, LCD_Set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetVRAMAddrEx
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddr
</UL>

<P><STRONG><a name="[243]"></a>LCD_SetVSizeEx</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, LCD_Set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetVSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSize
</UL>

<P><STRONG><a name="[1e9]"></a>LCD_SetSizeEx</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, LCD_Set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSize
</UL>

<P><STRONG><a name="[1eb]"></a>LCD_SetVisEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, LCD_Set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetVisEx
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVis
</UL>

<P><STRONG><a name="[1e7]"></a>LCD_SetPosEx</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPos
</UL>

<P><STRONG><a name="[246]"></a>LCD_SetAlphaModeEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaMode
</UL>

<P><STRONG><a name="[247]"></a>LCD_SetChromaModeEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaMode
</UL>

<P><STRONG><a name="[248]"></a>LCD_SetChromaEx</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChroma
</UL>

<P><STRONG><a name="[249]"></a>LCD_SetLUTEntryEx</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, LCD_Set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntry
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEx
</UL>

<P><STRONG><a name="[1e2]"></a>LCD_GetPosEx</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, LCD_Set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPos
</UL>

<P><STRONG><a name="[24a]"></a>LCD_RefreshEx</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Refresh
</UL>

<P><STRONG><a name="[24b]"></a>LCD_OnEx</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_On
</UL>

<P><STRONG><a name="[24c]"></a>LCD_OffEx</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Off
</UL>

<P><STRONG><a name="[24d]"></a>LCD_SetAlpha</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaEx
</UL>

<P><STRONG><a name="[24e]"></a>LCD_SetVRAMAddr</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
</UL>

<P><STRONG><a name="[24f]"></a>LCD_SetVSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
</UL>

<P><STRONG><a name="[250]"></a>LCD_SetSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
</UL>

<P><STRONG><a name="[251]"></a>LCD_SetVis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
</UL>

<P><STRONG><a name="[252]"></a>LCD_SetPos</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
</UL>

<P><STRONG><a name="[253]"></a>LCD_SetAlphaMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaModeEx
</UL>

<P><STRONG><a name="[254]"></a>LCD_SetChromaMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaModeEx
</UL>

<P><STRONG><a name="[255]"></a>LCD_SetChroma</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaEx
</UL>

<P><STRONG><a name="[256]"></a>LCD_SetLUTEntry</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
</UL>

<P><STRONG><a name="[257]"></a>LCD_GetPos</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
</UL>

<P><STRONG><a name="[258]"></a>LCD_Refresh</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RefreshEx
</UL>

<P><STRONG><a name="[259]"></a>LCD_On</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_OnEx
</UL>

<P><STRONG><a name="[25a]"></a>LCD_Off</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_OffEx
</UL>

<P><STRONG><a name="[25b]"></a>LCD_SetDevFunc</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, LCD_Set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetDevFunc
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_FillRect
</UL>

<P><STRONG><a name="[4cf]"></a>LCD_SetOrg</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)

<P><STRONG><a name="[25c]"></a>GUI__AddSpaceHex</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, GUI__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddHex
</UL>

<P><STRONG><a name="[25d]"></a>GUI__CalcTextRect</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, GUI__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[4d0]"></a>GUI__DivideRound</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI__Private.o(.text), UNUSED)

<P><STRONG><a name="[4d1]"></a>GUI__DivideRound32</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, GUI__Private.o(.text), UNUSED)

<P><STRONG><a name="[172]"></a>GUI__HandleEOLine</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, GUI__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
</UL>

<P><STRONG><a name="[2ac]"></a>GUI__IntersectRect</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, GUI__Private.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[1c8]"></a>GUI__IntersectRects</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, GUI__Private.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
</UL>

<P><STRONG><a name="[25e]"></a>GUI__memcpy</STRONG> (Thumb, 164 bytes, Stack size 12 bytes, GUI__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[1ed]"></a>GUI__memset</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, GUI__Private.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[29e]"></a>GUI__memset16</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, GUI__Private.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset16
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[4d2]"></a>GUI__Read16</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUI__Private.o(.text), UNUSED)

<P><STRONG><a name="[4d3]"></a>GUI__Read32</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, GUI__Private.o(.text), UNUSED)

<P><STRONG><a name="[4d4]"></a>GUI__ReduceRect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI__Private.o(.text), UNUSED)

<P><STRONG><a name="[262]"></a>GUI__SetPixelAlpha</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, GUI__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>

<P><STRONG><a name="[264]"></a>GUI__SetText</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, GUI__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>

<P><STRONG><a name="[26a]"></a>GUI__sqrt32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI__Private.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ATan2
</UL>

<P><STRONG><a name="[268]"></a>GUI__strcmp</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, GUI__Private.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
</UL>

<P><STRONG><a name="[265]"></a>GUI__strcmp_hp</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, GUI__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[266]"></a>GUI__strlen</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI__Private.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[269]"></a>GUI__ATan2</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, GUI__SinHQ.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ASinHQ
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>

<P><STRONG><a name="[26b]"></a>GUI__ASinHQ</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, GUI__SinHQ.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ATan2
</UL>

<P><STRONG><a name="[17e]"></a>GUI__SinHQ</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, GUI__SinHQ.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RotatePolygon
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
</UL>

<P><STRONG><a name="[17d]"></a>GUI__CosHQ</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI__SinHQ.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RotatePolygon
</UL>

<P><STRONG><a name="[1cd]"></a>GUI__WrapGetNumCharsDisp</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI__Wrap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[26e]"></a>GUI__WrapGetNumCharsToNextLine</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, GUI__Wrap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>

<P><STRONG><a name="[1cb]"></a>GUI__WrapGetNumBytesToNextLine</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, GUI__Wrap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetPositions
</UL>

<P><STRONG><a name="[4d5]"></a>GUI_WrapSetSeparators</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI__Wrap.o(.text), UNUSED)

<P><STRONG><a name="[26f]"></a>GUI_WrapGetPositions</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, GUI__Wrap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>

<P><STRONG><a name="[270]"></a>GUI_DispNextLine</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, GUI_Char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
</UL>

<P><STRONG><a name="[271]"></a>GL_DispChar</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, GUI_Char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[15d]"></a>GUI_GetYAdjust</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, GUI_Char.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCEOL
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[1be]"></a>GUI_GetFontDistY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Char.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
</UL>

<P><STRONG><a name="[26c]"></a>GUI_GetCharDistX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
</UL>

<P><STRONG><a name="[273]"></a>GUI_GetCharDistXEx</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_Char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>

<P><STRONG><a name="[16f]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, GUI_CharLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>

<P><STRONG><a name="[277]"></a>GUI__GetOverlap</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, GUI_CharLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__GetOverlap
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[170]"></a>GUI__GetLineDistX</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, GUI_CharLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[1c0]"></a>GUI__DispLine</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, GUI_CharLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[278]"></a>GUIPROP__FindChar</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_CharP.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_IsInFont
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_GetCharDistX
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[106]"></a>GUIPROP_DispChar</STRONG> (Thumb, 200 bytes, Stack size 56 bytes, GUI_CharP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUIPROP_DispChar &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Address Reference Count : 2]<UL><LI> F32_ASCII.o(.rodata)
<LI> F32_1.o(.rodata)
</UL>
<P><STRONG><a name="[107]"></a>GUIPROP_GetCharDistX</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, GUI_CharP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUIPROP_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 2]<UL><LI> F32_ASCII.o(.rodata)
<LI> F32_1.o(.rodata)
</UL>
<P><STRONG><a name="[108]"></a>GUIPROP_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_CharP.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> F32_ASCII.o(.rodata)
<LI> F32_1.o(.rodata)
</UL>
<P><STRONG><a name="[109]"></a>GUIPROP_IsInFont</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, GUI_CharP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUIPROP_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 2]<UL><LI> F32_ASCII.o(.rodata)
<LI> F32_1.o(.rodata)
</UL>
<P><STRONG><a name="[1c4]"></a>GUI_DispChar</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUI_DispChar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringLen
</UL>

<P><STRONG><a name="[27a]"></a>GUI_DispCharAt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_DispChar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[27b]"></a>GUI_DispChars</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, GUI_DispChar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[19f]"></a>GUI_GetKey</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_OnKey.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitKey
</UL>

<P><STRONG><a name="[27e]"></a>GUI_StoreKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_OnKey.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[280]"></a>GUI_ClearKeyBuffer</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, GUI_OnKey.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncReadPointer
</UL>

<P><STRONG><a name="[281]"></a>GUI_StoreKeyMsg</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, GUI_OnKey.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SendKeyMsg
</UL>

<P><STRONG><a name="[282]"></a>GUI_PollKeyMsg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, GUI_OnKey.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncReadPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
</UL>

<P><STRONG><a name="[284]"></a>GUI_SendKeyMsg</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, GUI_OnKey.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
</UL>

<P><STRONG><a name="[4d6]"></a>GUI_GetKeyState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_OnKey.o(.text), UNUSED)

<P><STRONG><a name="[4d7]"></a>GUI_KEY__SetHook</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_OnKey.o(.text), UNUSED)

<P><STRONG><a name="[4d8]"></a>GUI_UC_GetCharSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_UC.o(.text), UNUSED)

<P><STRONG><a name="[4d9]"></a>GUI_UC_GetCharCode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_UC.o(.text), UNUSED)

<P><STRONG><a name="[4da]"></a>GUI_UC_Encode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_UC.o(.text), UNUSED)

<P><STRONG><a name="[4db]"></a>GUI_UC__CalcSizeOfChar</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_UC.o(.text), UNUSED)

<P><STRONG><a name="[1c5]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, GUI_UC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringLen
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
</UL>

<P><STRONG><a name="[171]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, GUI_UC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[4dc]"></a>GUI_UC__NumBytes2NumChars</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, GUI_UC.o(.text), UNUSED)

<P><STRONG><a name="[1cf]"></a>GUI__GetNumChars</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, GUI_UC.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>

<P><STRONG><a name="[4dd]"></a>GUI_UC_SetEncodeNone</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_UC_EncodeNone.o(.text), UNUSED)

<P><STRONG><a name="[4de]"></a>GUI_SetSignalEventFunc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_WaitEvent.o(.text), UNUSED)

<P><STRONG><a name="[4df]"></a>GUI_SetWaitEventFunc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_WaitEvent.o(.text), UNUSED)

<P><STRONG><a name="[4e0]"></a>GUI_SetWaitEventTimedFunc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_WaitEvent.o(.text), UNUSED)

<P><STRONG><a name="[27f]"></a>GUI_SignalEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_WaitEvent.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[19e]"></a>GUI_WaitEvent</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, GUI_WaitEvent.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__IsActive
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WaitEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitKey
</UL>

<P><STRONG><a name="[4e1]"></a>GUI_MEMDEV_SetDrawMemdev16bppFunc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUIDEV_16.o(.text), UNUSED)

<P><STRONG><a name="[4e2]"></a>LCD__SetPaletteConversionHook</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_Color.o(.text), UNUSED)

<P><STRONG><a name="[221]"></a>LCD_InitColors</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, LCD_Color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[2a2]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, LCD_Color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableBM
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[2a3]"></a>LCD_GetpPalConvTable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_Color.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
</UL>

<P><STRONG><a name="[0]"></a>LCD_GetpPalConvTableBM</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_Color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableBM &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_Core.o(.data)
</UL>
<P><STRONG><a name="[222]"></a>LCD_InitLUT</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, LCD_Color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_InitLUT &rArr; LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[4e3]"></a>LCD_SetMaxNumColors</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, LCD_Color.o(.text), UNUSED)

<P><STRONG><a name="[4e4]"></a>LCD_GetMaxNumColors</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_Color.o(.text), UNUSED)

<P><STRONG><a name="[166]"></a>LCD_GetBkColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD_GetColorIndex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColorIndex
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>

<P><STRONG><a name="[169]"></a>LCD_GetColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD_GetColorIndex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColorIndex
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>

<P><STRONG><a name="[14c]"></a>LCD_GetPixelIndex</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, LCD_GetP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__InvertRectColors
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPixelIndex
</UL>

<P><STRONG><a name="[2a5]"></a>GUI_GetPixelIndex</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_GetP.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
</UL>

<P><STRONG><a name="[187]"></a>LCD_SelectLCD</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, LCD_SelectLCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SelectLCD
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[188]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, LCD_UpdateColorIndices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[2ad]"></a>WM__InvalidateParent</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>

<P><STRONG><a name="[2b4]"></a>WM__Invalidate1Abs</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = WM__Invalidate1Abs &rArr; _Invalidate1Abs &rArr; GUI_MergeRect &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateArea
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[2b5]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = WM__ClipAtParentBorders
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[2ba]"></a>WM__ActivateClipRect</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>

<P><STRONG><a name="[2bc]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = WM__InsertWindowIntoList
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[2c1]"></a>WM__RemoveWindowFromList</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
</UL>

<P><STRONG><a name="[2c2]"></a>WM__DetachWindow</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[2aa]"></a>WM__Client2Screen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[2c8]"></a>WM__IsWindow</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[2c9]"></a>WM__InvalidateDrawAndDescs</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM__InvalidateDrawAndDescs &rArr;  WM__InvalidateDrawAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[2cd]"></a>WM_InvalidateWindowAndDescsEx</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescsEx &rArr;  WM_InvalidateWindowAndDescsEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[2af]"></a>WM__InvalidateRect</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
</UL>

<P><STRONG><a name="[2c4]"></a>WM__InvalidateRectEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>

<P><STRONG><a name="[2b1]"></a>WM__RectIsNZ</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[2d3]"></a>WM_SendMessage</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
</UL>

<P><STRONG><a name="[2d5]"></a>WM__SendMsgNoData</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyVisChanged
</UL>

<P><STRONG><a name="[3bd]"></a>WM__GetClientRectWin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>

<P><STRONG><a name="[2d6]"></a>WM_InvalidateRect</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[2d7]"></a>WM_InvalidateWindow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDesktopColorEx
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Paint
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[2d8]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 316 bytes, Stack size 48 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindow
</UL>

<P><STRONG><a name="[2dc]"></a>WM_CreateWindow</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[2c6]"></a>WM_DeleteWindow</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
</UL>

<P><STRONG><a name="[2b3]"></a>WM__GetTopLevelLayer</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__GetTopLevelLayer
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[2df]"></a>WM__SelectTopLevelLayer</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>

<P><STRONG><a name="[2da]"></a>WM_SelectWindow</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WM_SelectWindow &rArr; WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[4e5]"></a>WM_GetActiveWindow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)

<P><STRONG><a name="[1a2]"></a>WM__GetNextIVR</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteOpaqueAt
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[1a0]"></a>WM__InitIVRSearch</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteOpaqueAt
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[2e4]"></a>WM_SetDefault</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_SetDefault &rArr; GL_SetDefault
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[cb]"></a>WM__Paint1</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = WM__Paint1 &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text)
</UL>
<P><STRONG><a name="[2ed]"></a>WM__Paint</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Update
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>

<P><STRONG><a name="[2ef]"></a>WM__DeleteSecure</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[2f3]"></a>WM_Exec1</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>

<P><STRONG><a name="[177]"></a>WM_Exec</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>

<P><STRONG><a name="[189]"></a>WM_Activate</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[2f5]"></a>WM_Deactivate</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[2f4]"></a>WM_DefaultProc</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[1b5]"></a>WM_Init</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[2f9]"></a>WM_GetWindowInfo</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[2fc]"></a>WM_BroadcastMessage</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>

<P><STRONG><a name="[2fe]"></a>WM_DetachWindow</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindowAt
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
</UL>

<P><STRONG><a name="[302]"></a>WM_AttachWindow</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetStayOnTop
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindowAt
</UL>

<P><STRONG><a name="[303]"></a>WM_AttachWindowAt</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>

<P><STRONG><a name="[305]"></a>WM_SetEnableState</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableWindow
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableWindow
</UL>

<P><STRONG><a name="[307]"></a>WM_EnableWindow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
</UL>

<P><STRONG><a name="[308]"></a>WM_DisableWindow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
</UL>

<P><STRONG><a name="[309]"></a>WM_ForEachDesc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>

<P><STRONG><a name="[30b]"></a>WM_GetBkColor</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[30e]"></a>WM_GetCallback</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[30f]"></a>WM_GetClientRectEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>

<P><STRONG><a name="[164]"></a>WM_GetClientRect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
</UL>

<P><STRONG><a name="[310]"></a>WM_GetClientWindow</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[1ad]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, WM_Lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[4e6]"></a>WM_GetDesktopWindowEx</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)

<P><STRONG><a name="[4e7]"></a>WM_GetNumWindows</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)

<P><STRONG><a name="[4e8]"></a>WM_GetNumInvalidWindows</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)

<P><STRONG><a name="[2db]"></a>WM_BringToBottom</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, WM_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[316]"></a>WM_CheckScrollBounds</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos
</UL>

<P><STRONG><a name="[315]"></a>WM_CheckScrollPos</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>

<P><STRONG><a name="[317]"></a>WM_SetScrollValue</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>

<P><STRONG><a name="[318]"></a>WM_GetDialogItem</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>

<P><STRONG><a name="[2cb]"></a>WM_GetFirstChild</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, WM_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetFirstChild
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyVisChanged
</UL>

<P><STRONG><a name="[319]"></a>WM_GetFlags</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>

<P><STRONG><a name="[4e9]"></a>WM_GetFocusedWindow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)

<P><STRONG><a name="[2fb]"></a>WM_GetId</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[31b]"></a>WM_GetInsideRectEx</STRONG> (Thumb, 14 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
</UL>

<P><STRONG><a name="[31d]"></a>WM_GetInsideRect</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
</UL>

<P><STRONG><a name="[31e]"></a>WM_GetInsideRectExScrollbar</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[321]"></a>WM_GetInvalidRect</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[322]"></a>WM_GetNextSibling</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[323]"></a>WM_GetWindowOrgX</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, WM_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetWindowOrgX
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgX
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[324]"></a>WM_GetWindowOrgY</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgY
</UL>

<P><STRONG><a name="[325]"></a>WM_GetOrgX</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
</UL>

<P><STRONG><a name="[326]"></a>WM_GetOrgY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
</UL>

<P><STRONG><a name="[314]"></a>WM_GetParent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, WM_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>

<P><STRONG><a name="[327]"></a>WM_GetPrevSibling</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>

<P><STRONG><a name="[328]"></a>WM_GetScrollbarH</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[32a]"></a>WM_GetScrollbarV</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[32b]"></a>WM_GetScrollPartner</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[32d]"></a>WM_GetScrollState</STRONG> (Thumb, 8 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[32f]"></a>WM_GetWindowRect</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[31f]"></a>WM_GetWindowRectEx</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[4ea]"></a>WM_HasCaptured</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)

<P><STRONG><a name="[4eb]"></a>WM_HasFocus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)

<P><STRONG><a name="[331]"></a>WM_InvalidateArea</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
</UL>

<P><STRONG><a name="[332]"></a>WM_IsEnabled</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>

<P><STRONG><a name="[334]"></a>WM_IsFocusable</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>

<P><STRONG><a name="[335]"></a>WM_IsVisible</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[336]"></a>WM_IsWindow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
</UL>

<P><STRONG><a name="[337]"></a>WM_MoveChildTo</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[2de]"></a>WM_NotifyParent</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[283]"></a>WM_OnKey</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SendKeyMsg
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[339]"></a>WM_Update</STRONG> (Thumb, 42 bytes, Stack size 120 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Paint
</UL>

<P><STRONG><a name="[33a]"></a>WM_Paint</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Update
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[33b]"></a>WM_ResizeWindow</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, WM_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>

<P><STRONG><a name="[2e6]"></a>WM_SendMessageNoPara</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_SendMessageNoPara &rArr; WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>

<P><STRONG><a name="[2f7]"></a>WM_SendToParent</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, WM_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>

<P><STRONG><a name="[33e]"></a>WM_SetAnchor</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[33f]"></a>WM_SetCallback</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[340]"></a>WM_SetCreateFlags</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[342]"></a>WM_SetDesktopColorEx</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDesktopColors
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDesktopColor
</UL>

<P><STRONG><a name="[343]"></a>WM_SetDesktopColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDesktopColorEx
</UL>

<P><STRONG><a name="[344]"></a>WM_SetDesktopColors</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDesktopColorEx
</UL>

<P><STRONG><a name="[345]"></a>WM_SetFocus</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>

<P><STRONG><a name="[4ec]"></a>WM_SetId</STRONG> (Thumb, 6 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)

<P><STRONG><a name="[4ed]"></a>WM_SetpfPollPID</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)

<P><STRONG><a name="[347]"></a>WM_SetScrollState</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[348]"></a>WM_SetSize</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, WM_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[18b]"></a>WM_SetUserClipRect</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
</UL>

<P><STRONG><a name="[34a]"></a>WM_SetWindowPos</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>

<P><STRONG><a name="[34b]"></a>WM_SetXSize</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[34c]"></a>WM_SetYSize</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[34d]"></a>WM_InvalidateWindowAndDescs</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>

<P><STRONG><a name="[34e]"></a>WM_ShowWindow</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[34f]"></a>WM_SetStayOnTop</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[350]"></a>WM_GetStayOnTop</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[351]"></a>WM_ValidateWindow</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[8]"></a>GUI__MixColorsBulk</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, GUI__Alpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__MixColorsBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__Alpha.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>GUI__MixColors</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, GUI__Alpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__MixColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__Alpha.o(.data)
</UL>
<P><STRONG><a name="[352]"></a>GUI__DoAlphaBlending</STRONG> (Thumb, 404 bytes, Stack size 88 bytes, GUI__Alpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; [Anonymous Symbol] &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndicesEx
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoAlphaBlending
</UL>

<P><STRONG><a name="[353]"></a>GUI__GetAlphaBuffer</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, GUI__Alpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = GUI__GetAlphaBuffer &rArr; [Anonymous Symbol] &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
</UL>

<P><STRONG><a name="[35b]"></a>GUI__AllocAlphaBuffer</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, GUI__Alpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = GUI__AllocAlphaBuffer &rArr; GUI__GetAlphaBuffer &rArr; [Anonymous Symbol] &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[4ee]"></a>GUI__SetAlphaBufferSize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI__Alpha.o(.text), UNUSED)

<P><STRONG><a name="[35c]"></a>GUI_SetFuncAlphaBlending</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI__Alpha.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[4ef]"></a>GUI_SetFuncMixColors</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI__Alpha.o(.text), UNUSED)

<P><STRONG><a name="[4f0]"></a>GUI_SetFuncMixColorsBulk</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUI__Alpha.o(.text), UNUSED)

<P><STRONG><a name="[4f1]"></a>GUI_SetFuncDrawAlpha</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, GUI__Alpha.o(.text), UNUSED)

<P><STRONG><a name="[35f]"></a>GUI__ManageCacheEx</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, GUI__ManageCache.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>

<P><STRONG><a name="[276]"></a>GUI__ManageCache</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI__ManageCache.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[361]"></a>GUI_SetControlHook</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, GUI__ManageCache.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RegisterExit
</UL>

<P><STRONG><a name="[362]"></a>GUI_SetRefreshHook</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, GUI__ManageCache.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RegisterExit
</UL>

<P><STRONG><a name="[11e]"></a>GUIMONO_DispChar</STRONG> (Thumb, 244 bytes, Stack size 80 bytes, GUI_CharM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUIMONO_DispChar &rArr; [Anonymous Symbol] &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> F6x8.o(.rodata)
</UL>
<P><STRONG><a name="[11f]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUI_CharM.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> F6x8.o(.rodata)
</UL>
<P><STRONG><a name="[120]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_CharM.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> F6x8.o(.rodata)
</UL>
<P><STRONG><a name="[121]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, GUI_CharM.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> F6x8.o(.rodata)
</UL>
<P><STRONG><a name="[285]"></a>GUI_TIMER__IsActive</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[286]"></a>GUI_TIMER__GetPeriod</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[36b]"></a>GUI_TIMER__GetNextTimer</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[36c]"></a>GUI_TIMER__GetFirstTimer</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[36d]"></a>GUI_TIMER__GetNextTimerLin</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[d3]"></a>GUI_TIMER_Exec</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, GUI_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_TIMER_Exec
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_Timer.o(.text)
</UL>
<P><STRONG><a name="[36f]"></a>GUI_TIMER_Create</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[370]"></a>GUI_TIMER_Delete</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
</UL>

<P><STRONG><a name="[371]"></a>GUI_TIMER_SetPeriod</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[372]"></a>GUI_TIMER_GetPeriod</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[373]"></a>GUI_TIMER_SetTime</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[374]"></a>GUI_TIMER_SetDelay</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[375]"></a>GUI_TIMER_Restart</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
</UL>

<P><STRONG><a name="[376]"></a>GUI_TIMER_GetFlag</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[377]"></a>LCD_SetLUTEx</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, GUICC_0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUT
</UL>

<P><STRONG><a name="[378]"></a>LCD_SetLUT</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUICC_0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEx
</UL>

<P><STRONG><a name="[379]"></a>GUI_MEMDEV__WriteToActiveAt</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, GUIDEV.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[37b]"></a>GUI_MEMDEV__CreateFixed</STRONG> (Thumb, 258 bytes, Stack size 56 bytes, GUIDEV.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed32
</UL>

<P><STRONG><a name="[37d]"></a>GUI_MEMDEV_GetBitsPerPixel</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, GUIDEV.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV_GetBitsPerPixel &rArr; LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
</UL>

<P><STRONG><a name="[2ca]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, GUIDEV.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_MEMDEV_Delete &rArr; GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[37f]"></a>GUI_MEMDEV_CreateEx</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, GUIDEV.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
</UL>

<P><STRONG><a name="[380]"></a>GUI_MEMDEV_Create</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, GUIDEV.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
</UL>

<P><STRONG><a name="[381]"></a>GUI_MEMDEV_Select</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, GUIDEV.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_MEMDEV_Select &rArr; GUI_DEVICE_Link
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[382]"></a>GUI_MEMDEV_CopyToLCDAt</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, GUIDEV.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>

<P><STRONG><a name="[383]"></a>GUI_MEMDEV_CopyToLCD</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUIDEV.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[384]"></a>GUI_MEMDEV_MarkDirty</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, GUIDEV.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>

<P><STRONG><a name="[3f1]"></a>GUI_MEMDEV__SetAlphaCallback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUIDEV_Banding.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[2ee]"></a>GUI_MEMDEV_Draw</STRONG> (Thumb, 316 bytes, Stack size 56 bytes, GUIDEV_Banding.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Min
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[ca]"></a>GUI_MEMDEV_Paint1Static</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, GUIDEV_StaticDevices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Paint1Static &rArr; _CreateStaticDevice &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text)
</UL>
<P><STRONG><a name="[399]"></a>GUI_MEMDEV__CreateStatic</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateWindowDevice
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateStatic
</UL>

<P><STRONG><a name="[39a]"></a>GUI_MEMDEV_CreateStatic</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateStatic
</UL>

<P><STRONG><a name="[39b]"></a>GUI_MEMDEV_GetWindowDevice</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
</UL>

<P><STRONG><a name="[394]"></a>GUI_MEMDEV_GetStaticDevice</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateWindowDevice
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[39c]"></a>GUI_MEMDEV_CreateWindowDevice</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateStatic
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[39d]"></a>GUI_USAGE_Select</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, GUIDEV_Usage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[37e]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, GUIDEV_Usage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[298]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, GUIDEV_Usage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MarkDirty
</UL>

<P><STRONG><a name="[bc]"></a>GUI_MEMDEV__WriteToActiveOpaque</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteOpaqueAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.text)
</UL>
<P><STRONG><a name="[2a4]"></a>LCD_GetNumLayers</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, LCD_GetNumDisplays.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumLayers
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[263]"></a>LCD_GetPixelColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, LCD_GetPixelColor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[2a8]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, LCD_SetClipRectEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[30a]"></a>WM__ForEachDesc</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, WM__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>

<P><STRONG><a name="[3b4]"></a>WM__GetFirstSibling</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, WM__Private.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>

<P><STRONG><a name="[3b5]"></a>WM__GetFocusedChild</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, WM__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
</UL>

<P><STRONG><a name="[3b7]"></a>WM__GetLastSibling</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, WM__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[4f2]"></a>WM__GetOrgX_AA</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, WM__Private.o(.text), UNUSED)

<P><STRONG><a name="[4f3]"></a>WM__GetOrgY_AA</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, WM__Private.o(.text), UNUSED)

<P><STRONG><a name="[313]"></a>WM__GetPrevSibling</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, WM__Private.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetPrevSibling
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>

<P><STRONG><a name="[3b8]"></a>WM__IsAncestor</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, WM__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
</UL>

<P><STRONG><a name="[3b9]"></a>WM__IsAncestorOrSelf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, WM__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>

<P><STRONG><a name="[3b6]"></a>WM__IsChild</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, WM__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocusedChild
</UL>

<P><STRONG><a name="[333]"></a>WM__IsEnabled</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, WM__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsEnabled
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>

<P><STRONG><a name="[3ba]"></a>WM__NotifyVisChanged</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, WM__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyVisChanged
</UL>

<P><STRONG><a name="[3bb]"></a>WM__Screen2Client</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, WM__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>

<P><STRONG><a name="[2d4]"></a>WM__SendMessage</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, WM__Private.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BroadcastMessage
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>

<P><STRONG><a name="[3bc]"></a>WM__SendMessageIfEnabled</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, WM__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>

<P><STRONG><a name="[33d]"></a>WM__SendMessageNoPara</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, WM__Private.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[33c]"></a>WM__UpdateChildPositions</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, WM__Private.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[2f8]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, WM__Private.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[4f4]"></a>WM__RemoveCriticalHandle</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, WM__Private.o(.text), UNUSED)

<P><STRONG><a name="[2f6]"></a>WM__GetClientRectEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, WM__Private.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>

<P><STRONG><a name="[338]"></a>WM__MoveWindow</STRONG> (Thumb, 148 bytes, Stack size 56 bytes, WM_Move.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>

<P><STRONG><a name="[3c1]"></a>WM__MoveTo</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, WM_Move.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>

<P><STRONG><a name="[301]"></a>WM_MoveWindow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, WM_Move.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>

<P><STRONG><a name="[304]"></a>WM_MoveTo</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, WM_Move.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindowAt
</UL>

<P><STRONG><a name="[2dd]"></a>WM__DeleteAssocTimer</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, WM_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[3c2]"></a>WM_DeleteTimer</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, WM_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[3c4]"></a>WM_CreateTimer</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, WM_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>

<P><STRONG><a name="[3c5]"></a>WM_RestartTimer</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, WM_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
</UL>

<P><STRONG><a name="[3c6]"></a>WM_GetTimerId</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, WM_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[3a2]"></a>GUI__CompactPixelIndices</STRONG> (Thumb, 288 bytes, Stack size 8 bytes, GUI__CompactPixelIndices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[3c7]"></a>GUI__ConvertColor2Index</STRONG> (Thumb, 314 bytes, Stack size 24 bytes, GUI__CompactPixelIndices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ConvertColor2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
</UL>

<P><STRONG><a name="[3ca]"></a>GUI__CompactPixelIndicesEx</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, GUI__CompactPixelIndices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__CompactPixelIndicesEx &rArr; GUI__ConvertColor2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ConvertColor2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[3cf]"></a>GUI__ExpandPixelIndices</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, GUI__ExpandPixelIndices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__ExpandPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRect
</UL>

<P><STRONG><a name="[357]"></a>GUI__ExpandPixelIndicesEx</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, GUI__ExpandPixelIndices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__ExpandPixelIndicesEx
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[391]"></a>GUI__AlphaPreserveTrans</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__AlphaPreserveTrans
</UL>
<BR>[Calls]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_SetOrMask
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[d8]"></a>GUI_SetAlpha</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = GUI_SetAlpha &rArr; _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDevice
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__SetAlphaCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[36a]"></a>GUI_GetTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_Time.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[4f5]"></a>GUI_SetTimeSlice</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Time.o(.text), UNUSED)

<P><STRONG><a name="[4f6]"></a>GUI_GetTimeSlice</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Time.o(.text), UNUSED)

<P><STRONG><a name="[3f3]"></a>GUI_Delay</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, GUI_Time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>

<P><STRONG><a name="[4f7]"></a>GUICC_M8888I_SetCustColorConv</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUICC_M8888I.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>LCD_Index2Color_M8888I</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUICC_M8888I_Index2Color.o(.text))
<BR>[Address Reference Count : 3]<UL><LI> GUI__Alpha.o(.text)
<LI> GUICC_M8888I.o(.rodata)
<LI> GUIDEV_WriteToActiveAlpha.o(.text)
</UL>
<P><STRONG><a name="[d0]"></a>LCD_Index2Color_M888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUICC_M888_Index2Color.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI__Alpha.o(.text)
</UL>
<P><STRONG><a name="[389]"></a>GUI_MEMDEV_Clear</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, GUIDEV_Clear.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[393]"></a>GUI_MEMDEV_CreateFixed</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, GUIDEV_CreateFixed.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[40e]"></a>GUI_MEMDEV_CreateFixed32</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, GUIDEV_CreateFixed.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[38c]"></a>GUI_MEMDEV_GetDataPtr</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, GUIDEV_GetDataPtr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetDataPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoAlphaBlending
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[38d]"></a>GUI_MEMDEV_GetXPos</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, GUIDEV_GetPos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetXPos
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[38e]"></a>GUI_MEMDEV_GetYPos</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, GUIDEV_GetPos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetYPos
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[38b]"></a>GUI_MEMDEV_GetXSize</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, GUIDEV_GetXSize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetXSize
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[386]"></a>GUI_MEMDEV_GetYSize</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, GUIDEV_GetYSize.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[387]"></a>GUI_MEMDEV_ReduceYSize</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, GUIDEV_ReduceYSize.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[388]"></a>GUI_MEMDEV_SetOrg</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, GUIDEV_SetOrg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV_SetOrg
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[37c]"></a>GUI_USAGE_BM_Create</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, GUIDEV_UsageBM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[412]"></a>GUI_MEMDEV_WriteAt</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, GUIDEV_Write.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_WriteAt &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
</UL>

<P><STRONG><a name="[398]"></a>GUI_MEMDEV_Write</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUIDEV_Write.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Write &rArr; GUI_MEMDEV_WriteAt &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[414]"></a>GUI_MEMDEV_WriteOpaqueAt</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, GUIDEV_Write.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteOpaque
</UL>

<P><STRONG><a name="[415]"></a>GUI_MEMDEV_WriteOpaque</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUIDEV_Write.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteOpaqueAt
</UL>

<P><STRONG><a name="[356]"></a>GUI_ReadRectEx</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, LCD_ReadRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_ReadRectEx &rArr; [Anonymous Symbol] &rArr; LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRect
</UL>

<P><STRONG><a name="[419]"></a>LCD_ReadRect</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, LCD_ReadRect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[41a]"></a>LCD_ReadRectNoClip</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, LCD_ReadRect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[41b]"></a>GUI_ReadRect</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, LCD_ReadRect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
</UL>

<P><STRONG><a name="[ea]"></a>GUI_MEMDEV__WriteToActiveAlpha</STRONG> (Thumb, 246 bytes, Stack size 72 bytes, GUIDEV_WriteToActiveAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__WriteToActiveAlpha &rArr; _WriteToActiveAlpha &rArr; _DoAlphaBlending &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; [Anonymous Symbol] &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipY
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[3ef]"></a>LCD_AA_SetOrMask</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD_AA.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaPreserveTrans
</UL>

<P><STRONG><a name="[9]"></a>LCD_AA_MixColors16</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, LCD_AA.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_AA_MixColors16
</UL>
<BR>[Address Reference Count : 2]<UL><LI> LCD_AA.o(.data)
<LI> LCD_AA.o(.text)
</UL>
<P><STRONG><a name="[42b]"></a>LCD_AA_MixColors256</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, LCD_AA.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_AA_MixColors256
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_Trans
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_NoTrans
</UL>

<P><STRONG><a name="[fe]"></a>LCD_SetPixelAA4_Trans</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, LCD_AA.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_SetPixelAA4_Trans &rArr; [Anonymous Symbol] &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_AA.o(.text)
</UL>
<P><STRONG><a name="[fd]"></a>LCD_SetPixelAA4_NoTrans</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, LCD_AA.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_SetPixelAA4_NoTrans
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_AA.o(.text)
</UL>
<P><STRONG><a name="[100]"></a>LCD_SetPixelAA8_Trans</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, LCD_AA.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_SetPixelAA8_Trans &rArr; [Anonymous Symbol] &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_MixColors256
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_AA.o(.text)
</UL>
<P><STRONG><a name="[ff]"></a>LCD_SetPixelAA8_NoTrans</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, LCD_AA.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_SetPixelAA8_NoTrans &rArr; LCD_AA_MixColors256
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_MixColors256
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_AA.o(.text)
</UL>
<P><STRONG><a name="[4f8]"></a>LCD_AA_SetGamma</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, LCD_AA.o(.text), UNUSED)

<P><STRONG><a name="[4f9]"></a>LCD_AA_GetGamma</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, LCD_AA.o(.text), UNUSED)

<P><STRONG><a name="[4fa]"></a>LCD_AA_EnableGamma</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, LCD_AA.o(.text), UNUSED)

<P><STRONG><a name="[4fb]"></a>LCD__GetPfSetPixel</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, LCD_AA.o(.text), UNUSED)

<P><STRONG><a name="[42c]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[4fc]"></a>____aeabi_memcpy8$ret$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[4fd]"></a>___aeabi_memmove4$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[4fe]"></a>___aeabi_memmove8$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[175]"></a>__aeabi_memcpy</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInvalidRect
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowInfo
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[180]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
</UL>

<P><STRONG><a name="[132]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
</UL>

<P><STRONG><a name="[2]"></a>memcpy</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__Private.o(.data)
</UL>
<P><STRONG><a name="[4ff]"></a>memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[410]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_AddHLine
</UL>

<P><STRONG><a name="[500]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[501]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[411]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Clear
</UL>

<P><STRONG><a name="[502]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[503]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memset
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__Private.o(.data)
</UL>
<P><STRONG><a name="[267]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[42e]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[504]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[42d]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[505]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[506]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[507]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[508]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[433]"></a>BSP_IO_WritePin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h743i_eval_io.o(i.BSP_IO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
</UL>

<P><STRONG><a name="[430]"></a>BSP_Init</STRONG> (Thumb, 186 bytes, Stack size 8 bytes, bsp.o(i.BSP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = BSP_Init &rArr; UART8_Init &rArr; Error_Handler &rArr; MainTask &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[432]"></a>BSP_LED_On</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32h743i_eval.o(i.BSP_LED_On))
<BR><BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IO_WritePin
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>

<P><STRONG><a name="[435]"></a>BSP_SDRAM_Init</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, stm32h743i_eval_sdram.o(i.BSP_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = BSP_SDRAM_Init &rArr; BSP_SDRAM_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Initialization_sequence
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[438]"></a>BSP_SDRAM_Initialization_sequence</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, stm32h743i_eval_sdram.o(i.BSP_SDRAM_Initialization_sequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BSP_SDRAM_Initialization_sequence &rArr; HAL_SDRAM_SendCommand &rArr; FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
</UL>

<P><STRONG><a name="[436]"></a>BSP_SDRAM_MspInit</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, stm32h743i_eval_sdram.o(i.BSP_SDRAM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BSP_SDRAM_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Init
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_DeInit
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
</UL>

<P><STRONG><a name="[e]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[105]"></a>CUSTOM_DrawBitmap32bpp</STRONG> (Thumb, 90 bytes, Stack size 48 bytes, lcdconf_stm32h743i_eval.o(i.CUSTOM_DrawBitmap32bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CUSTOM_DrawBitmap32bpp &rArr; DMA2D_CopyBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBufferSize
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_CopyBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_stm32h743i_eval.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[11]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[46d]"></a>FMC_SDRAM_Init</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, stm32h7xx_ll_fmc.o(i.FMC_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FMC_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[46f]"></a>FMC_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(i.FMC_SDRAM_ProgramRefreshRate))
<BR><BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
</UL>

<P><STRONG><a name="[470]"></a>FMC_SDRAM_SendCommand</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32h7xx_ll_fmc.o(i.FMC_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FMC_SDRAM_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand
</UL>

<P><STRONG><a name="[46e]"></a>FMC_SDRAM_Timing_Init</STRONG> (Thumb, 134 bytes, Stack size 28 bytes, stm32h7xx_ll_fmc.o(i.FMC_SDRAM_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FMC_SDRAM_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[1a7]"></a>GUI_X_Config</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guiconf_stm32h743i_eval.o(i.GUI_X_Config))
<BR><BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AssignMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[3f4]"></a>GUI_X_Delay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_x.o(i.GUI_X_Delay), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[6]"></a>GUI_X_ExecIdle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x.o(i.GUI_X_ExecIdle))
<BR>[Address Reference Count : 1]<UL><LI> GUI_WaitEvent.o(.data)
</UL>
<P><STRONG><a name="[3f2]"></a>GUI_X_GetTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_x.o(i.GUI_X_GetTime))
<BR><BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>

<P><STRONG><a name="[1ac]"></a>GUI_X_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x.o(i.GUI_X_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[448]"></a>HAL_DMA2D_Init</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, stm32h7xx_hal_dma2d.o(i.HAL_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
</UL>

<P><STRONG><a name="[449]"></a>HAL_DMA2D_MspInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcdconf_stm32h743i_eval.o(i.HAL_DMA2D_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
</UL>

<P><STRONG><a name="[475]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, stm32h7xx_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[43a]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32h7xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Initialization_sequence
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43c]"></a>HAL_GPIO_Init</STRONG> (Thumb, 450 bytes, Stack size 40 bytes, stm32h7xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_MCOConfig
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>

<P><STRONG><a name="[434]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
</UL>

<P><STRONG><a name="[44a]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Init
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
</UL>

<P><STRONG><a name="[48c]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[44b]"></a>HAL_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32h7xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44d]"></a>HAL_InitTick</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32h7xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[486]"></a>HAL_LTDC_ConfigCLUT</STRONG> (Thumb, 140 bytes, Stack size 20 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_ConfigCLUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_LTDC_ConfigCLUT
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[489]"></a>HAL_LTDC_ConfigColorKeying</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_ConfigColorKeying))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_LTDC_ConfigColorKeying
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[450]"></a>HAL_LTDC_ConfigLayer</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_LayerInit
</UL>

<P><STRONG><a name="[452]"></a>HAL_LTDC_DeInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_LTDC_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
</UL>

<P><STRONG><a name="[488]"></a>HAL_LTDC_DisableColorKeying</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_DisableColorKeying))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_LTDC_DisableColorKeying
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[485]"></a>HAL_LTDC_EnableCLUT</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_EnableCLUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_LTDC_EnableCLUT
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_LayerInit
</UL>

<P><STRONG><a name="[487]"></a>HAL_LTDC_EnableColorKeying</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_EnableColorKeying))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_LTDC_EnableColorKeying
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[483]"></a>HAL_LTDC_EnableDither</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_EnableDither))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_LTDC_EnableDither
</UL>
<BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
</UL>

<P><STRONG><a name="[455]"></a>HAL_LTDC_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[454]"></a>HAL_LTDC_IRQHandler</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; HAL_LTDC_ProgramLineEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ReloadEventCallback
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[458]"></a>HAL_LTDC_Init</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
</UL>

<P><STRONG><a name="[456]"></a>HAL_LTDC_LineEventCallback</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lcdconf_stm32h743i_eval.o(i.HAL_LTDC_LineEventCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_LTDC_LineEventCallback &rArr; HAL_LTDC_ProgramLineEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ProgramLineEvent
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfirmEx
</UL>
<BR>[Called By]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[453]"></a>HAL_LTDC_MspDeInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcdconf_stm32h743i_eval.o(i.HAL_LTDC_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_DeInit
</UL>

<P><STRONG><a name="[459]"></a>HAL_LTDC_MspInit</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, lcdconf_stm32h743i_eval.o(i.HAL_LTDC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_LTDC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
</UL>

<P><STRONG><a name="[45a]"></a>HAL_LTDC_ProgramLineEvent</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_ProgramLineEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_LTDC_ProgramLineEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
</UL>

<P><STRONG><a name="[457]"></a>HAL_LTDC_ReloadEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_ReloadEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[45b]"></a>HAL_LTDC_SetAddress</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_SetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_LTDC_SetAddress &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[45c]"></a>HAL_LTDC_SetAlpha</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_SetAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_LTDC_SetAlpha &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[45d]"></a>HAL_LTDC_SetWindowPosition</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(i.HAL_LTDC_SetWindowPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_LTDC_SetWindowPosition &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[43d]"></a>HAL_MDMA_DeInit</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MDMA_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
</UL>

<P><STRONG><a name="[43e]"></a>HAL_MDMA_Init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_MDMA_Init &rArr; MDMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
</UL>

<P><STRONG><a name="[48b]"></a>HAL_MPU_ConfigRegion</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, stm32h7xx_hal_cortex.o(i.HAL_MPU_ConfigRegion))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_MPU_ConfigRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Config
</UL>

<P><STRONG><a name="[44e]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[440]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>

<P><STRONG><a name="[43f]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>

<P><STRONG><a name="[44c]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[460]"></a>HAL_RCCEx_GetD1SysClockFreq</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetD1SysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_RCCEx_GetD1SysClockFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[462]"></a>HAL_RCCEx_GetD3PCLK1Freq</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetD3PCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_RCCEx_GetD3PCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCCEx_GetD1SysClockFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[48f]"></a>HAL_RCCEx_GetPLL2ClockFreq</STRONG> (Thumb, 268 bytes, Stack size 12 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetPLL2ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_RCCEx_GetPLL2ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[490]"></a>HAL_RCCEx_GetPLL3ClockFreq</STRONG> (Thumb, 268 bytes, Stack size 12 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetPLL3ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_RCCEx_GetPLL3ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[464]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 2448 bytes, Stack size 48 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
</UL>

<P><STRONG><a name="[467]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 458 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[463]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCCEx_GetD1SysClockFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD1SysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD3PCLK1Freq
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>

<P><STRONG><a name="[468]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_RCC_GetPCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCCEx_GetD1SysClockFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[469]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_RCC_GetPCLK2Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCCEx_GetD1SysClockFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[461]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 286 bytes, Stack size 20 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD1SysClockFreq
</UL>

<P><STRONG><a name="[46a]"></a>HAL_RCC_MCOConfig</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_MCOConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_RCC_MCOConfig &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[46b]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1202 bytes, Stack size 40 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[437]"></a>HAL_SDRAM_Init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32h7xx_hal_sdram.o(i.HAL_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_SDRAM_Init &rArr; FMC_SDRAM_Timing_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Timing_Init
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
</UL>

<P><STRONG><a name="[46c]"></a>HAL_SDRAM_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_sdram.o(i.HAL_SDRAM_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[43b]"></a>HAL_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32h7xx_hal_sdram.o(i.HAL_SDRAM_ProgramRefreshRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SDRAM_ProgramRefreshRate
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_ProgramRefreshRate
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Initialization_sequence
</UL>

<P><STRONG><a name="[439]"></a>HAL_SDRAM_SendCommand</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32h7xx_hal_sdram.o(i.HAL_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_SDRAM_SendCommand &rArr; FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Initialization_sequence
</UL>

<P><STRONG><a name="[48e]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.HAL_SYSTICK_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[44f]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[476]"></a>HAL_UARTEx_WakeupCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_uart_ex.o(i.HAL_UARTEx_WakeupCallback))
<BR><BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[471]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
</UL>

<P><STRONG><a name="[472]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 374 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_WakeupCallback
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Transmit_IT
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_IRQHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[479]"></a>HAL_UART_Init</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, stm32h7xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCCEx_GetD3PCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCCEx_GetD1SysClockFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_Init
</UL>

<P><STRONG><a name="[47a]"></a>HAL_UART_MspInit</STRONG> (Thumb, 518 bytes, Stack size 48 bytes, usart.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[47f]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, stm32h7xx_hal_uart.o(i.HAL_UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_Init
</UL>

<P><STRONG><a name="[47e]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, usart.o(i.HAL_UART_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
</UL>

<P><STRONG><a name="[480]"></a>HAL_UART_Transmit</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, stm32h7xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[478]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[c]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1a8]"></a>LCD_X_Config</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, lcdconf_stm32h743i_eval.o(i.LCD_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfigEx
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_Init
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_GetPixelformat
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[1ef]"></a>LCD_X_DisplayDriver</STRONG> (Thumb, 276 bytes, Stack size 32 bytes, lcdconf_stm32h743i_eval.o(i.LCD_X_DisplayDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = LCD_X_DisplayDriver &rArr; LCD_LL_LayerInit &rArr; HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetWindowPosition
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAlpha
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAddress
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_EnableColorKeying
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_DisableColorKeying
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigColorKeying
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigCLUT
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_LayerInit
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChroma
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_On
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Off
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[66]"></a>LTDC_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LTDC_IRQHandler &rArr; HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; HAL_LTDC_ProgramLineEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[446]"></a>MainTask</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, basic_helloworld.o(i.MainTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = MainTask &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>

<P><STRONG><a name="[d]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32h7xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>SystemInit</STRONG> (Thumb, 118 bytes, Stack size 20 bytes, system_stm32h7xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(.text)
</UL>
<P><STRONG><a name="[47]"></a>UART4_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART4_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>UART5_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.UART5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART5_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>UART7_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.UART7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART7_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>UART8_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.UART8_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART8_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[431]"></a>UART8_Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, usart.o(i.UART8_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = UART8_Init &rArr; Error_Handler &rArr; MainTask &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[47c]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, stm32h7xx_hal_uart.o(i.UART_AdvFeatureConfig))
<BR><BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[47d]"></a>UART_CheckIdleState</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, stm32h7xx_hal_uart.o(i.UART_CheckIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[47b]"></a>UART_SetConfig</STRONG> (Thumb, 1252 bytes, Stack size 64 bytes, stm32h7xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = UART_SetConfig &rArr; HAL_RCCEx_GetD3PCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCCEx_GetD1SysClockFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL3ClockFreq
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL2ClockFreq
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD3PCLK1Freq
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[481]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, stm32h7xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[39]"></a>USART1_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART1_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>USART2_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART2_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>USART3_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART3_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>USART6_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.USART6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART6_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[509]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[50a]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[50b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[9e]"></a>main</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = main &rArr; SystemClock_Config &rArr; HAL_RCC_MCOConfig &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Config
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_CACHE_Enable
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[491]"></a>CPU_CACHE_Enable</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, main.o(i.CPU_CACHE_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CPU_CACHE_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48a]"></a>MPU_Config</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, main.o(i.MPU_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = MPU_Config &rArr; HAL_MPU_ConfigRegion
</UL>
<BR>[Calls]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MPU_ConfigRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48d]"></a>SystemClock_Config</STRONG> (Thumb, 176 bytes, Stack size 320 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_MCOConfig &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_CLKSourceConfig
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_MCOConfig
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[103]"></a>CUSTOM_CopyBuffer</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, lcdconf_stm32h743i_eval.o(i.CUSTOM_CopyBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CUSTOM_CopyBuffer &rArr; DMA2D_CopyBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBufferSize
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_CopyBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_stm32h743i_eval.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[104]"></a>CUSTOM_CopyRect</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, lcdconf_stm32h743i_eval.o(i.CUSTOM_CopyRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CUSTOM_CopyRect &rArr; DMA2D_CopyBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_CopyBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_stm32h743i_eval.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[101]"></a>CUSTOM_FillRect</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, lcdconf_stm32h743i_eval.o(i.CUSTOM_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CUSTOM_FillRect &rArr; LCD_SetDevFunc
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDrawMode
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_GetPixelformat
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBufferSize
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lcdconf_stm32h743i_eval.o(i.CUSTOM_FillRect)
<LI> lcdconf_stm32h743i_eval.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[442]"></a>DMA2D_CopyBuffer</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, lcdconf_stm32h743i_eval.o(i.DMA2D_CopyBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2D_CopyBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_GetPixelformat
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_DrawBitmap32bpp
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_CopyRect
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_CopyBuffer
</UL>

<P><STRONG><a name="[441]"></a>GetBufferSize</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lcdconf_stm32h743i_eval.o(i.GetBufferSize))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_DrawBitmap32bpp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_FillRect
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_CopyBuffer
</UL>

<P><STRONG><a name="[444]"></a>LCD_LL_GetPixelformat</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcdconf_stm32h743i_eval.o(i.LCD_LL_GetPixelformat))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_LayerInit
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_CopyBuffer
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUSTOM_FillRect
</UL>

<P><STRONG><a name="[482]"></a>LCD_LL_Init</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, lcdconf_stm32h743i_eval.o(i.LCD_LL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LCD_LL_Init &rArr; HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ProgramLineEvent
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_EnableDither
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_DeInit
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[484]"></a>LCD_LL_LayerInit</STRONG> (Thumb, 104 bytes, Stack size 72 bytes, lcdconf_stm32h743i_eval.o(i.LCD_LL_LayerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LCD_LL_LayerInit &rArr; HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_EnableCLUT
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LL_GetPixelformat
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[445]"></a>Error_Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usart.o(i.Error_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = Error_Handler &rArr; MainTask &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_Init
</UL>

<P><STRONG><a name="[45f]"></a>__NVIC_SetPriority</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[451]"></a>LTDC_SetConfig</STRONG> (Thumb, 464 bytes, Stack size 48 bytes, stm32h7xx_hal_ltdc.o(i.LTDC_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetWindowPosition
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAlpha
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAddress
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
</UL>

<P><STRONG><a name="[45e]"></a>MDMA_Init</STRONG> (Thumb, 214 bytes, Stack size 20 bytes, stm32h7xx_hal_mdma.o(i.MDMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MDMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Init
</UL>

<P><STRONG><a name="[465]"></a>RCCEx_PLL2_Config</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc_ex.o(i.RCCEx_PLL2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[466]"></a>RCCEx_PLL3_Config</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc_ex.o(i.RCCEx_PLL3_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[102]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32h7xx_hal_uart.o(i.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_DMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(i.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[474]"></a>UART_EndRxTransfer</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32h7xx_hal_uart.o(i.UART_EndRxTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[473]"></a>UART_Receive_IT</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, stm32h7xx_hal_uart.o(i.UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[477]"></a>UART_Transmit_IT</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, stm32h7xx_hal_uart.o(i.UART_Transmit_IT))
<BR><BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[12d]"></a>_AddFreeMemory</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _AddFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[134]"></a>_Alloc</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + In Cycle
<LI>Call Chain = _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>

<P><STRONG><a name="[133]"></a>_EnlargeBlocks</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[12c]"></a>_GetMinIndex</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[136]"></a>_InitOnce</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[137]"></a>_PushFreeBlock</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _PushFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[12b]"></a>_RemoveFreeBlock</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[131]"></a>_RemoveHoles</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _RemoveHoles &rArr; _AddFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[12f]"></a>_WriteTagData</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[12e]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[130]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = [Anonymous Symbol] &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[148]"></a>_DrawTextLine</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, GUI_Common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _DrawTextLine &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDrawTextStyle
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDrawTextLine
</UL>

<P><STRONG><a name="[a2]"></a>_cbDrawTextLine</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_Common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _cbDrawTextLine &rArr; _DrawTextLine &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTextLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_Common.o(.text)
</UL>
<P><STRONG><a name="[a1]"></a>_cbDrawTextStyle</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, GUI_Common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _cbDrawTextStyle &rArr; _DrawTextLine &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTextLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_Common.o(.text)
</UL>
<P><STRONG><a name="[14a]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetFontSizeY
</UL>

<P><STRONG><a name="[152]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, GUI_Common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2VisColor
</UL>

<P><STRONG><a name="[15a]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispHexAt
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispBinAt
</UL>

<P><STRONG><a name="[15b]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_Common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispHexAt
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispBinAt
</UL>

<P><STRONG><a name="[a3]"></a>_OnExit</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, GUI_Core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_Core.o(.text)
</UL>
<P><STRONG><a name="[1ab]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[1bf]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_DispString.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[1d5]"></a>_GetIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_MULTIBUF.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_GetNumBuffersEx
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfirmEx
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfigEx
</UL>

<P><STRONG><a name="[1d1]"></a>_MULTIBUF_BeginMasked</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, GUI_MULTIBUF.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
</UL>

<P><STRONG><a name="[1d3]"></a>_MULTIBUF_EndMasked</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, GUI_MULTIBUF.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
</UL>

<P><STRONG><a name="[a6]"></a>_OnExit</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, GUI_MULTIBUF.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_MULTIBUF.o(.text)
</UL>
<P><STRONG><a name="[1d0]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_MULTIBUF.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
</UL>

<P><STRONG><a name="[10d]"></a>_Color2IndexBulk</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, GUICC_M565.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_M565.o(.rodata)
</UL>
<P><STRONG><a name="[10a]"></a>_Color2Index_M565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, GUICC_M565.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_M565.o(.rodata)
</UL>
<P><STRONG><a name="[10c]"></a>_GetIndexMask_M565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUICC_M565.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUICC_M565.o(.rodata)
</UL>
<P><STRONG><a name="[10e]"></a>_Index2ColorBulk</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, GUICC_M565.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_M565.o(.rodata)
</UL>
<P><STRONG><a name="[b4]"></a>_CopyBuffer</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _CopyBuffer &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[209]"></a>_DrawBitLine16BPP</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawBitLine16BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[208]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[1fa]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DrawBitLine2BPP &rArr; [Anonymous Symbol] &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[202]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DrawBitLine4BPP &rArr; [Anonymous Symbol] &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[204]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 128 bytes, Stack size 12 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[10f]"></a>_DrawBitmap</STRONG> (Thumb, 294 bytes, Stack size 56 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine4BPP &rArr; [Anonymous Symbol] &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.rodata)
</UL>
<P><STRONG><a name="[110]"></a>_DrawHLine</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _DrawHLine &rArr; [Anonymous Symbol] &rArr; _FillRect &rArr; _FillRectOpt16
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.rodata)
</UL>
<P><STRONG><a name="[111]"></a>_DrawVLine</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.rodata)
</UL>
<P><STRONG><a name="[112]"></a>_FillRect</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _FillRect &rArr; _FillRectOpt16
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRectOpt16
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.rodata)
</UL>
<P><STRONG><a name="[1f7]"></a>_FillRectOpt16</STRONG> (Thumb, 336 bytes, Stack size 20 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _FillRectOpt16
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[119]"></a>_GetDevData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.rodata)
</UL>
<P><STRONG><a name="[117]"></a>_GetDevFunc</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.rodata)
</UL>
<P><STRONG><a name="[118]"></a>_GetDevProp</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.rodata)
</UL>
<P><STRONG><a name="[113]"></a>_GetPixelIndex</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.rodata)
</UL>
<P><STRONG><a name="[ab]"></a>_GetPos</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _GetPos &rArr; [Anonymous Symbol] &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[11a]"></a>_GetRect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.rodata)
</UL>
<P><STRONG><a name="[ae]"></a>_Init</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _Init &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_LayerInit &rArr; HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[1ec]"></a>_InitOnce</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyBuffer
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[b0]"></a>_Off</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _Off &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_LayerInit &rArr; HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[af]"></a>_On</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _On &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_LayerInit &rArr; HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[b7]"></a>_ReadRect</STRONG> (Thumb, 50 bytes, Stack size 20 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _ReadRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[ac]"></a>_SetAlpha</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _SetAlpha &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_LayerInit &rArr; HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[b1]"></a>_SetAlphaMode</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _SetAlphaMode &rArr; [Anonymous Symbol] &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_LayerInit &rArr; HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[b3]"></a>_SetChroma</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _SetChroma &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_LayerInit &rArr; HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[b2]"></a>_SetChromaMode</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetChromaMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[b6]"></a>_SetDevFunc</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _SetDevFunc &rArr; [Anonymous Symbol] &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[116]"></a>_SetOrg</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _SetOrg &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_LayerInit &rArr; HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.rodata)
</UL>
<P><STRONG><a name="[114]"></a>_SetPixelIndex</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.rodata)
</UL>
<P><STRONG><a name="[aa]"></a>_SetPos</STRONG> (Thumb, 248 bytes, Stack size 64 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _SetPos &rArr; _SetVis &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_LayerInit &rArr; HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[a9]"></a>_SetSize</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _SetSize &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_LayerInit &rArr; HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[a7]"></a>_SetVRAMAddr</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _SetVRAMAddr &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_LayerInit &rArr; HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[a8]"></a>_SetVSize</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _SetVSize &rArr; [Anonymous Symbol] &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[ad]"></a>_SetVis</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _SetVis &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_LayerInit &rArr; HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[b5]"></a>_ShowBuffer</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _ShowBuffer &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_LayerInit &rArr; HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.text)
</UL>
<P><STRONG><a name="[115]"></a>_XorPixel</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_16.o(.rodata)
</UL>
<P><STRONG><a name="[1ee]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = [Anonymous Symbol] &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
</UL>

<P><STRONG><a name="[1f0]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = [Anonymous Symbol] &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDevFunc
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPos
</UL>

<P><STRONG><a name="[1f1]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = [Anonymous Symbol] &rArr; LCD_X_DisplayDriver &rArr; LCD_LL_LayerInit &rArr; HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlphaMode
</UL>

<P><STRONG><a name="[1f5]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[1f6]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[1f8]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRectOpt16
</UL>

<P><STRONG><a name="[1f9]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = [Anonymous Symbol] &rArr; _FillRect &rArr; _FillRectOpt16
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>

<P><STRONG><a name="[1fb]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[1fc]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[1fd]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [Anonymous Symbol] &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[1fe]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[1ff]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [Anonymous Symbol] &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[200]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [Anonymous Symbol] &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[201]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [Anonymous Symbol] &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[203]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
</UL>

<P><STRONG><a name="[205]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
</UL>

<P><STRONG><a name="[206]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[207]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDRV_Lin_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[11c]"></a>_SetBkColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD.o(.rodata)
</UL>
<P><STRONG><a name="[11b]"></a>_SetColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD.o(.rodata)
</UL>
<P><STRONG><a name="[11d]"></a>_SetDrawMode</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD.o(.rodata)
</UL>
<P><STRONG><a name="[20a]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
</UL>

<P><STRONG><a name="[20c]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
</UL>

<P><STRONG><a name="[20d]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>

<P><STRONG><a name="[20f]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[210]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[211]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[212]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[213]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[214]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[215]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[216]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[217]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[218]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[219]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[21a]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[21b]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol] &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[21c]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[21d]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[21e]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>

<P><STRONG><a name="[223]"></a>_GetDevProp</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYMagEx
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXMagEx
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
</UL>

<P><STRONG><a name="[224]"></a>_GetMaxValue</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeMax
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelMax
</UL>

<P><STRONG><a name="[23f]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_Set.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaEx
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaModeEx
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaModeEx
</UL>

<P><STRONG><a name="[240]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_Set.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaEx
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaModeEx
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaEx
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaModeEx
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RefreshEx
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_OnEx
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_OffEx
</UL>

<P><STRONG><a name="[241]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_Set.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaEx
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaModeEx
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaModeEx
</UL>

<P><STRONG><a name="[244]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_Set.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaEx
</UL>

<P><STRONG><a name="[245]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_Set.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaEx
</UL>

<P><STRONG><a name="[25f]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI__Private.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memcpy
</UL>

<P><STRONG><a name="[260]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI__Private.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memcpy
</UL>

<P><STRONG><a name="[261]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI__Private.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memcpy
</UL>

<P><STRONG><a name="[4]"></a>_GetCharWrap</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, GUI__Wrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetCharWrap &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__Wrap.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>_GetWordWrap</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, GUI__Wrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _GetWordWrap &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__Wrap.o(.data)
</UL>
<P><STRONG><a name="[26d]"></a>_WrapGetNumCharsDisp</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, GUI__Wrap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[272]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_Char.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>

<P><STRONG><a name="[274]"></a>_DispLine</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, GUI_CharLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DispLine &rArr; GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[5]"></a>_Log2VisBuffered</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUI_CharLine.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_CharLine.o(.data)
</UL>
<P><STRONG><a name="[279]"></a>CL_DispChar</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, GUI_DispChar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispChar
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispChars
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
</UL>

<P><STRONG><a name="[27d]"></a>_IncPointer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, GUI_OnKey.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncReadPointer
</UL>

<P><STRONG><a name="[27c]"></a>_IncReadPointer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_OnKey.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearKeyBuffer
</UL>

<P><STRONG><a name="[ba]"></a>_CalcSizeOfChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_UC_EncodeNone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeNone.o(.text)
</UL>
<P><STRONG><a name="[bb]"></a>_Encode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_UC_EncodeNone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeNone.o(.text)
</UL>
<P><STRONG><a name="[b8]"></a>_GetCharCode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_UC_EncodeNone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeNone.o(.text)
</UL>
<P><STRONG><a name="[b9]"></a>_GetCharSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_UC_EncodeNone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeNone.o(.text)
</UL>
<P><STRONG><a name="[287]"></a>_WaitEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_WaitEvent.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[29a]"></a>_DrawBitLine16BPP_DDB</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _DrawBitLine16BPP_DDB
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[28c]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 286 bytes, Stack size 40 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[28f]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[29b]"></a>_DrawBitLine32BPP</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine32BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[291]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[294]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[297]"></a>_DrawBitLine8BPP_DDB</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = _DrawBitLine8BPP_DDB
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[bd]"></a>_DrawBitmap</STRONG> (Thumb, 386 bytes, Stack size 80 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine4BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP_DDB
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP_DDB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.text)
</UL>
<P><STRONG><a name="[be]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>_DrawVLine</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.text)
</UL>
<P><STRONG><a name="[c0]"></a>_FillRect</STRONG> (Thumb, 164 bytes, Stack size 56 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.text)
</UL>
<P><STRONG><a name="[c7]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.text)
</UL>
<P><STRONG><a name="[c5]"></a>_GetDevFunc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.text)
</UL>
<P><STRONG><a name="[c6]"></a>_GetDevProp</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.text)
</UL>
<P><STRONG><a name="[c1]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.text)
</UL>
<P><STRONG><a name="[c8]"></a>_GetRect</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.text)
</UL>
<P><STRONG><a name="[c4]"></a>_SetOrg</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.text)
</UL>
<P><STRONG><a name="[c2]"></a>_SetPixelIndex</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; [Anonymous Symbol] &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.text)
</UL>
<P><STRONG><a name="[288]"></a>_XY2PTR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[c3]"></a>_XorPixel</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; [Anonymous Symbol] &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_16.o(.text)
</UL>
<P><STRONG><a name="[289]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[28a]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[28b]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
</UL>

<P><STRONG><a name="[28d]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[28e]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[290]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[292]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
</UL>

<P><STRONG><a name="[293]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, GUIDEV_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
</UL>

<P><STRONG><a name="[295]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, GUIDEV_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP_DDB
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
</UL>

<P><STRONG><a name="[296]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP_DDB
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
</UL>

<P><STRONG><a name="[299]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[29c]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[29d]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[29f]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
</UL>

<P><STRONG><a name="[2a0]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol] &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>

<P><STRONG><a name="[2a1]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>

<P><STRONG><a name="[c9]"></a>_OnExit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, LCD_Color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_Color.o(.text)
</UL>
<P><STRONG><a name="[2ec]"></a>WM__PaintWinAndOverlays</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
</UL>

<P><STRONG><a name="[2c5]"></a>_DeleteAllChildren</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[2b9]"></a>_DesktopHandle2Index</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[2f2]"></a>_Exec1Draw</STRONG> (Thumb, 110 bytes, Stack size 136 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>

<P><STRONG><a name="[2f0]"></a>_Exec1Input</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>

<P><STRONG><a name="[2e0]"></a>_FindNext_IVR</STRONG> (Thumb, 298 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[2d1]"></a>_Findx0</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[2d2]"></a>_Findx1</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _Findx1 &rArr;  _Findx1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[2ce]"></a>_Findy1</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[2b0]"></a>_Invalidate1Abs</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = _Invalidate1Abs &rArr; GUI_MergeRect &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RectIsNZ
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[ce]"></a>_OnExit</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text)
</UL>
<P><STRONG><a name="[2e9]"></a>_Paint1</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Paint1
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[2ea]"></a>_Paint1Trans</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _Paint1Trans &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[2eb]"></a>_PaintTransChildren</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[2a7]"></a>_SetClipRectUserIntersect</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[cd]"></a>_cbBackWin</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = _cbBackWin &rArr; GUI_Clear &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text)
</UL>
<P><STRONG><a name="[cc]"></a>_cbPaintMemDev</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _cbPaintMemDev &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text)
</UL>
<P><STRONG><a name="[2a9]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = [Anonymous Symbol] &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[2ab]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[2ae]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[2b2]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = [Anonymous Symbol] &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[2b6]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
</UL>

<P><STRONG><a name="[2b7]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
</UL>

<P><STRONG><a name="[2b8]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
</UL>

<P><STRONG><a name="[2bb]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[2bd]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
</UL>

<P><STRONG><a name="[2be]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>

<P><STRONG><a name="[2bf]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[2c0]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>

<P><STRONG><a name="[2c3]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[2cc]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[2cf]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[2d0]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[2d9]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
</UL>

<P><STRONG><a name="[2e1]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[2e2]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[2e5]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
</UL>

<P><STRONG><a name="[2e7]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol] &rArr; WM_SetDefault &rArr; GL_SetDefault
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>

<P><STRONG><a name="[2e8]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = [Anonymous Symbol] &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
</UL>

<P><STRONG><a name="[2e3]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
</UL>

<P><STRONG><a name="[2f1]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
</UL>

<P><STRONG><a name="[2fa]"></a>_GetDialogItem</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[2fd]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetStayOnTop
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetAnchor
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetCallback
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BroadcastMessage
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>

<P><STRONG><a name="[2ff]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>

<P><STRONG><a name="[300]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
</UL>

<P><STRONG><a name="[306]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
</UL>

<P><STRONG><a name="[30c]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
</UL>

<P><STRONG><a name="[311]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Lib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
</UL>

<P><STRONG><a name="[312]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [Anonymous Symbol] &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>

<P><STRONG><a name="[31a]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
</UL>

<P><STRONG><a name="[31c]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
</UL>

<P><STRONG><a name="[320]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>

<P><STRONG><a name="[329]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
</UL>

<P><STRONG><a name="[32c]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetStayOnTop
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>

<P><STRONG><a name="[32e]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
</UL>

<P><STRONG><a name="[330]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRect
</UL>

<P><STRONG><a name="[341]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCreateFlags
</UL>

<P><STRONG><a name="[346]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
</UL>

<P><STRONG><a name="[30d]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, WM_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
</UL>

<P><STRONG><a name="[349]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Lib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
</UL>

<P><STRONG><a name="[d1]"></a>_OnExit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, GUI__Alpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__Alpha.o(.text)
</UL>
<P><STRONG><a name="[358]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI__Alpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[359]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, GUI__Alpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = [Anonymous Symbol] &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>

<P><STRONG><a name="[35a]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI__Alpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>

<P><STRONG><a name="[35d]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI__Alpha.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFuncAlphaBlending
</UL>

<P><STRONG><a name="[d2]"></a>_OnExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI__ManageCache.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI__ManageCache.o(.text)
</UL>
<P><STRONG><a name="[35e]"></a>_RegisterExit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI__ManageCache.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetRefreshHook
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetControlHook
</UL>

<P><STRONG><a name="[360]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI__ManageCache.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>

<P><STRONG><a name="[363]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_CharM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[364]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_CharM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = [Anonymous Symbol] &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[369]"></a>_Link</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetDelay
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[d4]"></a>_OnExit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_Timer.o(.text)
</UL>
<P><STRONG><a name="[365]"></a>_Unlink</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetDelay
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[366]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_Timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimer
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetTime
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetDelay
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetPeriod
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[367]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimer
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
</UL>

<P><STRONG><a name="[368]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[36e]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[122]"></a>_Color2Index_0</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, GUICC_0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Color2Index_0 &rArr; LCD_GetNumColors &rArr; LCD_GetNumColorsEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcColorDist
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_0.o(.rodata)
</UL>
<P><STRONG><a name="[124]"></a>_GetIndexMask_0</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, GUICC_0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetIndexMask_0 &rArr; LCD_GetNumColors &rArr; LCD_GetNumColorsEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_0.o(.rodata)
</UL>
<P><STRONG><a name="[123]"></a>_Index2Color_0</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, GUICC_0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2Color_0 &rArr; LCD_GetNumColors &rArr; LCD_GetNumColorsEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_0.o(.rodata)
</UL>
<P><STRONG><a name="[37a]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[385]"></a>_Min</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUIDEV_Banding.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[392]"></a>_AddContent</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
</UL>

<P><STRONG><a name="[38a]"></a>_CopyContent</STRONG> (Thumb, 394 bytes, Stack size 56 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[397]"></a>_CreateStatic</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateStatic
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[38f]"></a>_CreateStaticDevice</STRONG> (Thumb, 302 bytes, Stack size 48 bytes, GUIDEV_StaticDevices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = _CreateStaticDevice &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaPreserveTrans
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[395]"></a>_GetWindowDevice</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetWindowDevice
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
</UL>

<P><STRONG><a name="[390]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_StaticDevices.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[396]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateWindowDevice
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[39e]"></a>_Convert16</STRONG> (Thumb, 34 bytes, Stack size 40 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _Convert16 &rArr; [Anonymous Symbol] &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[3a1]"></a>_Convert8</STRONG> (Thumb, 34 bytes, Stack size 40 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _Convert8 &rArr; [Anonymous Symbol] &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[3a3]"></a>_WriteToActiveOpaque_8</STRONG> (Thumb, 622 bytes, Stack size 128 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert8
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[3ac]"></a>_WriteToActiveOpaque_HT</STRONG> (Thumb, 546 bytes, Stack size 96 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _WriteToActiveOpaque_HT &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[39f]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert8
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
</UL>

<P><STRONG><a name="[3a0]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = [Anonymous Symbol] &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert8
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
</UL>

<P><STRONG><a name="[3a4]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[3a6]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[3a7]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[3a8]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[3a9]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = [Anonymous Symbol] &rArr; LCD__DrawBitmap_1bpp &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[3aa]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[3ab]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = [Anonymous Symbol] &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[3ad]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
</UL>

<P><STRONG><a name="[3ae]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
</UL>

<P><STRONG><a name="[3af]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = [Anonymous Symbol] &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
</UL>

<P><STRONG><a name="[3b0]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
</UL>

<P><STRONG><a name="[3b1]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
</UL>

<P><STRONG><a name="[3b2]"></a>_NotifyVisChanged</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, WM__Private.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyVisChanged
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__NotifyVisChanged
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyVisChanged
</UL>

<P><STRONG><a name="[3b3]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM__Private.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyVisChanged
</UL>

<P><STRONG><a name="[3be]"></a>_MoveDescendents</STRONG> (Thumb, 98 bytes, Stack size 56 bytes, WM_Move.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[3bf]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Move.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[3c0]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Move.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[d5]"></a>_cbTimer</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, WM_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _cbTimer &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM_Timer.o(.text)
</UL>
<P><STRONG><a name="[3c3]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[3c8]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI__CompactPixelIndices.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ConvertColor2Index
</UL>

<P><STRONG><a name="[3c9]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI__CompactPixelIndices.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ConvertColor2Index
</UL>

<P><STRONG><a name="[d9]"></a>_Color2Index</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[dc]"></a>_Color2IndexBulk</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[3e8]"></a>_DrawBitLine16BPP</STRONG> (Thumb, 48 bytes, Stack size 64 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _DrawBitLine16BPP &rArr; [Anonymous Symbol] &rArr; _DrawBitmapLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3d5]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 270 bytes, Stack size 64 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _DrawBitLine1BPP &rArr; _DrawBitmapLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3dc]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawBitLine2BPP &rArr; [Anonymous Symbol] &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3ec]"></a>_DrawBitLine32BPP</STRONG> (Thumb, 46 bytes, Stack size 64 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _DrawBitLine32BPP &rArr; [Anonymous Symbol] &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3e4]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawBitLine4BPP &rArr; [Anonymous Symbol] &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3e6]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _DrawBitLine8BPP &rArr; [Anonymous Symbol] &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[de]"></a>_DrawBitmap</STRONG> (Thumb, 148 bytes, Stack size 56 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine16BPP &rArr; [Anonymous Symbol] &rArr; _DrawBitmapLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[3d4]"></a>_DrawBitmapLine</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _DrawBitmapLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[df]"></a>_DrawHLine</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = _DrawHLine &rArr; _DrawBitmapLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[e0]"></a>_DrawVLine</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _DrawVLine &rArr; _XorPixel &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[e1]"></a>_FillRect</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _FillRect &rArr; _DrawHLine &rArr; _DrawBitmapLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[3d0]"></a>_GetBitsPerPixel</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>

<P><STRONG><a name="[e8]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[e6]"></a>_GetDevFunc</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevFunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[e7]"></a>_GetDevProp</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[db]"></a>_GetIndexMask</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[3d2]"></a>_GetLine</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>

<P><STRONG><a name="[e2]"></a>_GetPixelIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[3db]"></a>_GetPointers</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>

<P><STRONG><a name="[e9]"></a>_GetRect</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[da]"></a>_Index2Color</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[dd]"></a>_Index2ColorBulk</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[3ee]"></a>_InitAlpha</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[3d3]"></a>_MixColors</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[d7]"></a>_OnExit</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[d6]"></a>_ReadRectFromMemdev</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ReadRectFromMemdev &rArr; GUI_MEMDEV_GetBitsPerPixel &rArr; LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[e5]"></a>_SetOrg</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[e3]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[e4]"></a>_XorPixel</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[3cb]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk
</UL>

<P><STRONG><a name="[3cc]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk
</UL>

<P><STRONG><a name="[3cd]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk
</UL>

<P><STRONG><a name="[3ce]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk
</UL>

<P><STRONG><a name="[3d1]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[3d6]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[3d7]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = [Anonymous Symbol] &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[3d8]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[3d9]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[3da]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = [Anonymous Symbol] &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[3dd]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[3de]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[3df]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = [Anonymous Symbol] &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[3e0]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = [Anonymous Symbol] &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[3e1]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[3e2]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[3e3]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = [Anonymous Symbol] &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[3e5]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
</UL>

<P><STRONG><a name="[3e7]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
</UL>

<P><STRONG><a name="[3e9]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[3ea]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = [Anonymous Symbol] &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[3eb]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = [Anonymous Symbol] &rArr; _DrawBitmapLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[3ed]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[127]"></a>_Color2IndexBulk_M8888I</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, GUICC_M8888I.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2IndexBulk_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_M8888I.o(.rodata)
</UL>
<P><STRONG><a name="[125]"></a>_Color2Index_M8888I</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUICC_M8888I.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUICC_M8888I.o(.rodata)
</UL>
<P><STRONG><a name="[126]"></a>_GetIndexMask_M8888I</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUICC_M8888I.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUICC_M8888I.o(.rodata)
</UL>
<P><STRONG><a name="[128]"></a>_Index2ColorBulk_M8888I</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, GUICC_M8888I.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2ColorBulk_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_M8888I.o(.rodata)
</UL>
<P><STRONG><a name="[407]"></a>_DrawBitLine16BPP</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine16BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3f9]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 256 bytes, Stack size 48 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3fc]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[406]"></a>_DrawBitLine32BPP_DDB</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine32BPP_DDB
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3fe]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[401]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[404]"></a>_DrawBitLine8BPP_DDB</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = _DrawBitLine8BPP_DDB
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[eb]"></a>_DrawBitmap</STRONG> (Thumb, 356 bytes, Stack size 80 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine1BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP_DDB
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[ec]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[ed]"></a>_DrawVLine</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[ee]"></a>_FillRect</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[f5]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[f3]"></a>_GetDevFunc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[f4]"></a>_GetDevProp</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[ef]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[f6]"></a>_GetRect</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[f2]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[f0]"></a>_SetPixelIndex</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = _SetPixelIndex &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[3f5]"></a>_XY2PTR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[f1]"></a>_XorPixel</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _XorPixel &rArr; [Anonymous Symbol] &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[3f6]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[3f7]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, GUIDEV_32.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3f8]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[3fa]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[3fb]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, GUIDEV_32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[3fd]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[3ff]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
</UL>

<P><STRONG><a name="[400]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, GUIDEV_32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
</UL>

<P><STRONG><a name="[402]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, GUIDEV_32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP_DDB
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
</UL>

<P><STRONG><a name="[403]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP_DDB
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
</UL>

<P><STRONG><a name="[405]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[408]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[409]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[40a]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = [Anonymous Symbol] &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[40b]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
</UL>

<P><STRONG><a name="[40c]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
</UL>

<P><STRONG><a name="[40d]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>

<P><STRONG><a name="[40f]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_GetPos.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
</UL>

<P><STRONG><a name="[f8]"></a>GUI_USAGE_BM_AddHLine</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, GUIDEV_UsageBM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_AddHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.text)
</UL>
<P><STRONG><a name="[f7]"></a>GUI_USAGE_BM_AddPixel</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, GUIDEV_UsageBM.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.text)
</UL>
<P><STRONG><a name="[f9]"></a>GUI_USAGE_BM_Clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUIDEV_UsageBM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.text)
</UL>
<P><STRONG><a name="[fb]"></a>GUI_USAGE_BM_GetNextDirty</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, GUIDEV_UsageBM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_GetNextDirty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.text)
</UL>
<P><STRONG><a name="[fa]"></a>_GUI_USAGE_BM_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUIDEV_UsageBM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GUI_USAGE_BM_Delete &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.text)
</UL>
<P><STRONG><a name="[413]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_Write.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteOpaqueAt
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[416]"></a>LCD_ReadRectEx</STRONG> (Thumb, 316 bytes, Stack size 48 bytes, LCD_ReadRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[417]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_ReadRect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>

<P><STRONG><a name="[418]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_ReadRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = [Anonymous Symbol] &rArr; LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectNoClip
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRect
</UL>

<P><STRONG><a name="[41c]"></a>_ClipX</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, GUIDEV_WriteToActiveAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ClipX &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[41f]"></a>_ClipY</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, GUIDEV_WriteToActiveAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ClipY &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[420]"></a>_DoAlphaBlending</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, GUIDEV_WriteToActiveAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = _DoAlphaBlending &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; [Anonymous Symbol] &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[421]"></a>_WriteToActiveAlpha</STRONG> (Thumb, 278 bytes, Stack size 104 bytes, GUIDEV_WriteToActiveAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = _WriteToActiveAlpha &rArr; _DoAlphaBlending &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; [Anonymous Symbol] &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoAlphaBlending
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipY
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipX
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[41d]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, GUIDEV_WriteToActiveAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipY
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipX
</UL>

<P><STRONG><a name="[41e]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, GUIDEV_WriteToActiveAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipY
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipX
</UL>

<P><STRONG><a name="[fc]"></a>_MixColorsGamma16</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, LCD_AA.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _MixColorsGamma16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_AA.o(.text)
</UL>
<P><STRONG><a name="[422]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_AA.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_Trans
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
</UL>

<P><STRONG><a name="[423]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_AA.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_Trans
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
</UL>

<P><STRONG><a name="[424]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_AA.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_Trans
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_NoTrans
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_NoTrans
</UL>

<P><STRONG><a name="[425]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_AA.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = [Anonymous Symbol] &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_Trans
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
</UL>

<P><STRONG><a name="[426]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_AA.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_Trans
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
</UL>

<P><STRONG><a name="[427]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_AA.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_NoTrans
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_NoTrans
</UL>

<P><STRONG><a name="[428]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_AA.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_NoTrans
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_NoTrans
</UL>

<P><STRONG><a name="[429]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_AA.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_NoTrans
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_NoTrans
</UL>

<P><STRONG><a name="[42a]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_AA.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_NoTrans
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_NoTrans
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
